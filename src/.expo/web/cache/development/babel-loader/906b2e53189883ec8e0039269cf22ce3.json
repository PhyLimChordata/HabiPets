{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\Login.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styling/Authentication\";\nimport { AuthContext } from \"../Context\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      primaryInfo = _useState2[0],\n      setPrimaryInfo = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState7 = useState({\n    backgroundColor: colors.Secondary,\n    padding: 10,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    fontSize: 15,\n    borderRadius: 5,\n    marginBottom: 20,\n    width: 300\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputStyle = _useState8[0],\n      setInputStyle = _useState8[1];\n\n  var _useContext = useContext(AuthContext),\n      logIn = _useContext.logIn;\n\n  var updatingPrimaryInput = function updatingPrimaryInput(text) {\n    setPrimaryInfo(text);\n    setError('');\n    setInputStyle({\n      backgroundColor: colors.Secondary,\n      padding: 10,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      fontSize: 15,\n      borderRadius: 5,\n      marginBottom: 20,\n      width: 300\n    });\n  };\n\n  var updatingPasswordInput = function updatingPasswordInput(text) {\n    setPassword(text);\n    setError('');\n    setInputStyle({\n      backgroundColor: colors.Secondary,\n      padding: 10,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      marginBottom: 20,\n      width: 300\n    });\n  };\n\n  var attemptLogin = function attemptLogin() {\n    fetch('http://localhost:5000/api/v1.0.0/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        primaryInfo: primaryInfo,\n        password: password,\n        date: new Date()\n      })\n    }).then(function (res) {\n      if (primaryInfo == '' || password == '') {\n        setError('Please enter all parameters');\n      } else if (res.status == 200) {\n        res.json().then(function (data) {\n          logIn(data.token);\n        });\n      } else if (res.status == 404 || res.status == 401) {\n        setError('The provided information is incorrect');\n      } else if (res.status == 400) {\n        setError('User has not been verified');\n      } else if (res.status == 500) {\n        setError('Something wrong happened internally...');\n      }\n\n      if (res.status != 200) {\n        setInputStyle({\n          backgroundColor: colors.Secondary,\n          padding: 10,\n          borderWidth: 3,\n          borderColor: 'red',\n          borderStyle: 'solid',\n          fontSize: 15,\n          borderRadius: 5,\n          marginBottom: 20,\n          width: 300\n        });\n      }\n    }).catch();\n  };\n\n  return React.createElement(View, {\n    style: styles(colors).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).authenticationLogo,\n    source: require(\"../resources/images/Logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles(colors).inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, \"Email or Username\"), React.createElement(TextInput, {\n    style: inputStyle,\n    value: primaryInfo,\n    placeholder: \"Please enter an Email or Username\",\n    onChangeText: function onChangeText(text) {\n      return updatingPrimaryInput(text);\n    },\n    autoCapitalize: 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles(colors).authenticationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: inputStyle,\n    secureTextEntry: true,\n    value: password,\n    placeholder: \"*********\",\n    onChangeText: function onChangeText(text) {\n      return updatingPasswordInput(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles(colors).forgotView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    onPress: function onPress() {\n      return props.navigation.push('PasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Need help logging in?\"), React.createElement(Text, {\n    style: styles(colors).errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, error)))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: styles(colors).authenticationButton,\n    onPress: function onPress() {\n      return attemptLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, \"Login\")), React.createElement(Text, {\n    style: styles(colors).subText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, \"New User?\", React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    onPress: function onPress() {\n      return props.navigation.push('SignupScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).signupText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 6\n    }\n  }, \" Sign up\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/Login.js"],"names":["React","useState","useContext","styles","AuthContext","useTheme","Login","props","primaryInfo","setPrimaryInfo","password","setPassword","error","setError","colors","backgroundColor","Secondary","padding","borderWidth","borderStyle","fontSize","borderRadius","marginBottom","width","inputStyle","setInputStyle","logIn","updatingPrimaryInput","text","updatingPasswordInput","attemptLogin","fetch","method","headers","body","JSON","stringify","date","Date","then","res","status","json","data","token","borderColor","catch","container","authenticationLogo","require","inputContainer","authenticationText","forgotView","navigation","push","forgotPassword","errorMessage","authenticationButton","authenticationButtonText","subText","signupText"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport { View, Text, TextInput, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport styles from '../styling/Authentication';\r\n\r\nimport { AuthContext } from '../Context';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction Login(props) {\r\n\tconst [primaryInfo, setPrimaryInfo] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst { colors } = useTheme();\r\n\r\n\tconst [inputStyle, setInputStyle] = useState({\r\n\t\tbackgroundColor: colors.Secondary,\r\n\t\tpadding: 10,\r\n\t\tborderWidth: 0,\r\n\t\tborderStyle: 'solid',\r\n\t\tfontSize: 15,\r\n\t\tborderRadius: 5,\r\n\t\tmarginBottom: 20,\r\n\t\twidth: 300,\r\n\t});\r\n\tconst { logIn } = useContext(AuthContext);\r\n\r\n\tconst updatingPrimaryInput = (text) => {\r\n\t\tsetPrimaryInfo(text);\r\n\t\tsetError('');\r\n\t\tsetInputStyle({\r\n\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderWidth: 0,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontSize: 15,\r\n\t\t\tborderRadius: 5,\r\n\t\t\tmarginBottom: 20,\r\n\t\t\twidth: 300,\r\n\t\t});\r\n\t};\r\n\r\n\tconst updatingPasswordInput = (text) => {\r\n\t\tsetPassword(text);\r\n\t\tsetError('');\r\n\t\tsetInputStyle({\r\n\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderWidth: 0,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tborderRadius: 5,\r\n\t\t\tmarginBottom: 20,\r\n\t\t\twidth: 300,\r\n\t\t});\r\n\t};\r\n\r\n\tconst attemptLogin = () => {\r\n\t\tfetch('http://localhost:5000/api/v1.0.0/user/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tprimaryInfo: primaryInfo,\r\n\t\t\t\tpassword: password,\r\n\t\t\t\tdate: new Date(),\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (primaryInfo == '' || password == '') {\r\n\t\t\t\t\tsetError('Please enter all parameters');\r\n\t\t\t\t} else if (res.status == 200) {\r\n\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\tlogIn(data.token);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status == 404 || res.status == 401) {\r\n\t\t\t\t\tsetError('The provided information is incorrect');\r\n\t\t\t\t} else if (res.status == 400) {\r\n\t\t\t\t\tsetError('User has not been verified');\r\n\t\t\t\t} else if (res.status == 500) {\r\n\t\t\t\t\tsetError('Something wrong happened internally...');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (res.status != 200) {\r\n\t\t\t\t\tsetInputStyle({\r\n\t\t\t\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\tborderWidth: 3,\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tborderStyle: 'solid',\r\n\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\tborderRadius: 5,\r\n\t\t\t\t\t\tmarginBottom: 20,\r\n\t\t\t\t\t\twidth: 300,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles(colors).container}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).authenticationLogo}\r\n\t\t\t\tsource={require('../resources/images/Logo.png')}\r\n\t\t\t/>\r\n\t\t\t<View style={styles(colors).inputContainer}>\r\n\t\t\t\t<Text style={styles(colors).authenticationText}>Email or Username</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={inputStyle}\r\n\t\t\t\t\tvalue={primaryInfo}\r\n\t\t\t\t\tplaceholder='Please enter an Email or Username'\r\n\t\t\t\t\tonChangeText={(text) => updatingPrimaryInput(text)}\r\n\t\t\t\t\tautoCapitalize={'none'}\r\n\t\t\t\t></TextInput>\r\n\r\n\t\t\t\t<Text style={styles(colors).authenticationText}>Password</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={inputStyle}\r\n\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tplaceholder='*********'\r\n\t\t\t\t\tonChangeText={(text) => updatingPasswordInput(text)}\r\n\t\t\t\t></TextInput>\r\n\t\t\t\t<View style={styles(colors).forgotView}>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\t\t\tonPress={() => props.navigation.push('PasswordScreen')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Text style={styles(colors).forgotPassword}>\r\n\t\t\t\t\t\t\tNeed help logging in?\r\n\t\t\t\t\t\t</Text>\r\n\r\n\t\t\t\t\t\t<Text style={styles(colors).errorMessage}>{error}</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={styles(colors).authenticationButton}\r\n\t\t\t\tonPress={() => attemptLogin()}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>Login</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<Text style={styles(colors).subText}>\r\n\t\t\t\tNew User?\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\t\tonPress={() => props.navigation.push('SignupScreen')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Text style={styles(colors).signupText}> Sign up</Text>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
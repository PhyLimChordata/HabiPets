{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\AllHabits.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport styles from \"../styling/HabitsScreen\";\nimport Habits from \"../components/Habits\";\nimport MenuHeader from \"../components/MenuHeader\";\nimport { useTheme } from '@react-navigation/native';\nimport { AuthContext } from \"../Context\";\n\nfunction AllHabitsScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      habits = _useState2[0],\n      setHabits = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userHabitId = _useState4[0],\n      setUserHabitId = _useState4[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayed = _useState6[0],\n      setDisplayed = _useState6[1];\n\n  var scrolling = React.useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken;\n\n  useEffect(function () {\n    if (habits.length == 0 && !displayed) displayHabits();\n  });\n\n  var displayHabits = function displayHabits() {\n    setDisplayed(true);\n    fetch('http://localhost:5000/api/v1.0.0/habit/show_all_user_habit/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'authentication-token': getToken\n      }\n    }).then(function (res) {\n      return res.json().then(function (data) {\n        var expValue = parseInt(data.expValue);\n        setHabits(data.habitList);\n        setUserHabitId(data._id);\n        var heartValue = [];\n\n        for (var i = 0; i < data.heart; i++) {\n          heartValue.push(i);\n        }\n\n        setDisplayed(true);\n      });\n    }).catch();\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles(colors).headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, React.createElement(MenuHeader, {\n    back: true,\n    text: \"All Habits\",\n    navigation: props.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 20,\n      marginLeft: 60,\n      marginRight: 60,\n      marginTop: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, React.createElement(Animated.ScrollView, {\n    showsVerticalScrollIndicator: false,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrolling\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    decelerationRate: 'normal',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, habits.map(function (data, index) {\n    if (data.times - data.todo > 0) {\n      var scale = scrolling.interpolate({\n        inputRange: [-1, 0, 100 * index, 100 * (index + 1)],\n        outputRange: [1, 1, 1, 0]\n      });\n      var opacity = scrolling.interpolate({\n        inputRange: [-1, 0, 100 * index, 100 * (index + 0.8)],\n        outputRange: [1, 1, 1, 0]\n      });\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }\n      }, React.createElement(Habits, {\n        enableLeft: true,\n        navigation: props.navigation,\n        name: data.title,\n        streak: 1,\n        frequency: data.times - data.todo,\n        habitId: data._id,\n        userHabitId: userHabitId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      })));\n    }\n  }))));\n}\n\nexport default AllHabitsScreen;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/AllHabits.js"],"names":["React","useState","useEffect","useContext","styles","Habits","MenuHeader","useTheme","AuthContext","AllHabitsScreen","props","habits","setHabits","userHabitId","setUserHabitId","colors","displayed","setDisplayed","scrolling","useRef","Animated","Value","current","getToken","length","displayHabits","fetch","method","headers","then","res","json","data","expValue","parseInt","habitList","_id","heartValue","i","heart","push","catch","headContainer","navigation","flex","marginLeft","marginRight","marginTop","event","nativeEvent","contentOffset","y","useNativeDriver","map","index","times","todo","scale","interpolate","inputRange","outputRange","opacity","transform","title","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Image, Animated, SafeAreaView } from 'react-native';\r\n\r\nimport styles from '../styling/HabitsScreen';\r\nimport Habits from '../components/Habits';\r\nimport MenuHeader from '../components/MenuHeader';\r\n\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nimport { AuthContext } from '../Context';\r\n\r\nfunction AllHabitsScreen(props) {\r\n\tconst [habits, setHabits] = useState([]);\r\n\tconst [userHabitId, setUserHabitId] = useState('');\r\n\tconst { colors } = useTheme();\r\n\tconst [displayed, setDisplayed] = useState(false);\r\n\tconst scrolling = React.useRef(new Animated.Value(0)).current;\r\n\r\n\tconst { getToken } = useContext(AuthContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (habits.length == 0 && !displayed) displayHabits();\r\n\t});\r\n\r\n\tconst displayHabits = () => {\r\n\t\tsetDisplayed(true);\r\n\t\tfetch('http://localhost:5000/api/v1.0.0/habit/show_all_user_habit/', {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'authentication-token': getToken,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\tconst expValue = parseInt(data.expValue);\r\n\t\t\t\t\tsetHabits(data.habitList);\r\n\t\t\t\t\tsetUserHabitId(data._id);\r\n\r\n\t\t\t\t\t//Displaying purposes\r\n\t\t\t\t\tconst heartValue = [];\r\n\t\t\t\t\tfor (var i = 0; i < data.heart; i++) {\r\n\t\t\t\t\t\theartValue.push(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetDisplayed(true);\r\n\t\t\t\t}),\r\n\t\t\t)\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles(colors).headContainer}>\r\n\t\t\t<MenuHeader back={true} text='All Habits' navigation={props.navigation} />\r\n\t\t\t<View\r\n\t\t\t\tstyle={{ flex: 20, marginLeft: 60, marginRight: 60, marginTop: 40 }}\r\n\t\t\t>\r\n\t\t\t\t<Animated.ScrollView\r\n\t\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\t\tonScroll={Animated.event(\r\n\t\t\t\t\t\t[{ nativeEvent: { contentOffset: { y: scrolling } } }],\r\n\t\t\t\t\t\t{ useNativeDriver: true },\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tdecelerationRate={'normal'}\r\n\t\t\t\t>\r\n\t\t\t\t\t{habits.map((data, index) => {\r\n\t\t\t\t\t\tif (data.times - data.todo > 0) {\r\n\t\t\t\t\t\t\tconst scale = scrolling.interpolate({\r\n\t\t\t\t\t\t\t\tinputRange: [-1, 0, 100 * index, 100 * (index + 1)],\r\n\t\t\t\t\t\t\t\toutputRange: [1, 1, 1, 0],\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tconst opacity = scrolling.interpolate({\r\n\t\t\t\t\t\t\t\tinputRange: [-1, 0, 100 * index, 100 * (index + 0.8)],\r\n\t\t\t\t\t\t\t\toutputRange: [1, 1, 1, 0],\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t\t<Animated.View style={{ opacity, transform: [{ scale }] }}>\r\n\t\t\t\t\t\t\t\t\t\t<Habits\r\n\t\t\t\t\t\t\t\t\t\t\tenableLeft={true}\r\n\t\t\t\t\t\t\t\t\t\t\tnavigation={props.navigation}\r\n\t\t\t\t\t\t\t\t\t\t\tname={data.title}\r\n\t\t\t\t\t\t\t\t\t\t\tstreak={1}\r\n\t\t\t\t\t\t\t\t\t\t\tfrequency={data.times - data.todo}\r\n\t\t\t\t\t\t\t\t\t\t\thabitId={data._id}\r\n\t\t\t\t\t\t\t\t\t\t\tuserHabitId={userHabitId}\r\n\t\t\t\t\t\t\t\t\t\t></Habits>\r\n\t\t\t\t\t\t\t\t\t\t<View style={{ height: 15 }}></View>\r\n\t\t\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Animated.ScrollView>\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nexport default AllHabitsScreen;\r\n"]},"metadata":{},"sourceType":"module"}
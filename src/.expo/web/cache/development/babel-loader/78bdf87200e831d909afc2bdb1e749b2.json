{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\components\\\\ScrollViewElement.js\";\nimport React, { useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport styles from \"../styling/Habits\";\nimport Colours from \"../resources/themes/Colours\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction ScrollViewElement(props) {\n  var _this = this;\n\n  var swipeableRef = useRef(props.swipe);\n\n  var leftSwipe = function leftSwipe(progress, dragX) {\n    var scale = dragX.interpolate({\n      inputRange: [0, 100],\n      outputRange: [0, 1],\n      extrapolate: 'clamp'\n    });\n\n    var left = function left() {\n      props.leftFunction();\n      swipeableRef.current.close();\n    };\n\n    return React.createElement(View, {\n      style: {\n        backgroundColor: Colours.Red.Error,\n        borderRadius: 8,\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, React.createElement(Trash, {\n      onPress: left,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }\n    })));\n  };\n\n  var rightSwipe = function rightSwipe(progress, dragX) {\n    var scale = dragX.interpolate({\n      inputRange: [-100, 0],\n      outputRange: [1, 0],\n      extrapolate: 'clamp'\n    });\n\n    var right = function right() {\n      props.rightFunction();\n      swipeableRef.current.close();\n    };\n\n    return React.createElement(View, {\n      style: {\n        backgroundColor: Colours.Blue.Confirm,\n        borderRadius: 8,\n        height: '100%',\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        padding: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        transform: [{\n          scale: scale\n        }]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, React.createElement(Checkmark, {\n      onPress: right,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    })));\n  };\n\n  if (props.leftFunction != undefined && props.rightFunction != undefined) {\n    return React.createElement(Swipeable, {\n      ref: swipeableRef,\n      renderLeftActions: leftSwipe,\n      renderRightActions: rightSwipe,\n      leftThreshold: 80,\n      rightThreshold: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, props.content);\n  } else if (props.leftFunction != undefined) {\n    return React.createElement(Swipeable, {\n      ref: swipeableRef,\n      renderLeftActions: leftSwipe,\n      leftThreshold: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }\n    }, props.content);\n  } else if (props.rightFunction != undefined) {\n    return React.createElement(Swipeable, {\n      ref: swipeableRef,\n      renderRightActions: rightSwipe,\n      rightThreshold: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 4\n      }\n    }, props.content);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, props.content);\n}\n\nfunction Checkmark(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    onPress: props.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).swipeIcon,\n    source: require(\"../resources/images/Checkmark.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction Trash(props) {\n  var _useTheme2 = useTheme(),\n      colors = _useTheme2.colors;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    onPress: props.onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).swipeIcon,\n    source: require(\"../resources/images/Trash.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default ScrollViewElement;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/components/ScrollViewElement.js"],"names":["React","useRef","Swipeable","styles","Colours","useTheme","ScrollViewElement","props","swipeableRef","swipe","leftSwipe","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","left","leftFunction","current","close","backgroundColor","Red","Error","borderRadius","height","width","justifyContent","alignItems","padding","transform","rightSwipe","right","rightFunction","Blue","Confirm","undefined","content","Checkmark","colors","onPress","swipeIcon","require","Trash"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { View, Animated, TouchableOpacity, Image } from 'react-native';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\n\r\nimport styles from '../styling/Habits';\r\n\r\nimport Colours from '../resources/themes/Colours';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction ScrollViewElement(props) {\r\n\tconst swipeableRef = useRef(props.swipe);\r\n\tconst leftSwipe = (progress, dragX) => {\r\n\t\tconst scale = dragX.interpolate({\r\n\t\t\tinputRange: [0, 100],\r\n\t\t\toutputRange: [0, 1],\r\n\t\t\textrapolate: 'clamp',\r\n\t\t});\r\n\t\tlet left = () => {\r\n\t\t\tprops.leftFunction();\r\n\t\t\tswipeableRef.current.close();\r\n\t\t\t// if (props.leftClose && swipeableRef.current != null)\r\n\t\t\t// \tswipeableRef.current.close();\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: Colours.Red.Error,\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'flex-start',\r\n\t\t\t\t\tpadding: 20,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Animated.View style={{ transform: [{ scale }] }}>\r\n\t\t\t\t\t<Trash onPress={left} />\r\n\t\t\t\t</Animated.View>\r\n\t\t\t</View>\r\n\t\t);\r\n\t};\r\n\r\n\tconst rightSwipe = (progress, dragX) => {\r\n\t\tconst scale = dragX.interpolate({\r\n\t\t\tinputRange: [-100, 0],\r\n\t\t\toutputRange: [1, 0],\r\n\t\t\textrapolate: 'clamp',\r\n\t\t});\r\n\t\tlet right = () => {\r\n\t\t\tprops.rightFunction();\r\n\t\t\tswipeableRef.current.close();\r\n\t\t\t// if (props.rightClose && swipeableRef.current != null)\r\n\t\t\t// \tswipeableRef.current.close()\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: Colours.Blue.Confirm,\r\n\t\t\t\t\tborderRadius: 8,\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'flex-end',\r\n\t\t\t\t\tpadding: 20,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Animated.View style={{ transform: [{ scale }] }}>\r\n\t\t\t\t\t<Checkmark onPress={right} />\r\n\t\t\t\t</Animated.View>\r\n\t\t\t</View>\r\n\t\t);\r\n\t};\r\n\r\n\tif (props.leftFunction != undefined && props.rightFunction != undefined) {\r\n\t\treturn (\r\n\t\t\t<Swipeable\r\n\t\t\t\tref={swipeableRef}\r\n\t\t\t\trenderLeftActions={leftSwipe}\r\n\t\t\t\trenderRightActions={rightSwipe}\r\n\t\t\t\tleftThreshold={80}\r\n\t\t\t\trightThreshold={80}\r\n\t\t\t\t// onSwipeableLeftOpen={props.leftFunction}\r\n\t\t\t\t// onSwipeableRightOpen={props.rightFunction}\r\n\t\t\t>\r\n\t\t\t\t{props.content}\r\n\t\t\t</Swipeable>\r\n\t\t);\r\n\t} else if (props.leftFunction != undefined) {\r\n\t\treturn (\r\n\t\t\t<Swipeable\r\n\t\t\t\tref={swipeableRef}\r\n\t\t\t\trenderLeftActions={leftSwipe}\r\n\t\t\t\tleftThreshold={80}\r\n\t\t\t\t// onSwipeableLeftOpen={props.leftFunction}\r\n\t\t\t>\r\n\t\t\t\t{props.content}\r\n\t\t\t</Swipeable>\r\n\t\t);\r\n\t} else if (props.rightFunction != undefined) {\r\n\t\treturn (\r\n\t\t\t<Swipeable\r\n\t\t\t\tref={swipeableRef}\r\n\t\t\t\trenderRightActions={rightSwipe}\r\n\t\t\t\trightThreshold={80}\r\n\t\t\t>\r\n\t\t\t\t{props.content}\r\n\t\t\t</Swipeable>\r\n\t\t);\r\n\t}\r\n\treturn <View>{props.content}</View>;\r\n}\r\n\r\nfunction Checkmark(props) {\r\n\tconst { colors } = useTheme();\r\n\treturn (\r\n\t\t<TouchableOpacity activeOpacity={0.6} onPress={props.onPress}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).swipeIcon}\r\n\t\t\t\tsource={require('../resources/images/Checkmark.png')}\r\n\t\t\t/>\r\n\t\t</TouchableOpacity>\r\n\t);\r\n}\r\n\r\nfunction Trash(props) {\r\n\tconst { colors } = useTheme();\r\n\treturn (\r\n\t\t<TouchableOpacity activeOpacity={0.6} onPress={props.onPress}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).swipeIcon}\r\n\t\t\t\tsource={require('../resources/images/Trash.png')}\r\n\t\t\t/>\r\n\t\t</TouchableOpacity>\r\n\t);\r\n}\r\n\r\nexport default ScrollViewElement;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\App.js\";\nimport React, { useState, useMemo } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\nimport BottomMenu from \"./frontend/components/BottomMenu\";\nimport LoginScreen from \"./frontend/screens/Login\";\nimport SignupScreen from \"./frontend/screens/Signup\";\nimport VerifyEmailSignUpScreen from \"./frontend/screens/VerifyEmailSignUp\";\nimport PasswordScreen from \"./frontend/screens/AccountRecovery\";\nimport NewPasswordScreen from \"./frontend/screens/NewPassword\";\nimport VerifyEmailPasswordScreen from \"./frontend/screens/VerifyEmailPassword\";\nimport EvolutionScreen from \"./frontend/screens/Evolution\";\nimport SettingsScreen from \"./frontend/screens/Settings\";\nimport ProfileEditScreen from \"./frontend/screens/Profile\";\nimport AchievementScreen from \"./frontend/screens/Achievement\";\nimport AboutScreen from \"./frontend/screens/About\";\nimport CollaboratorsScreen from \"./frontend/screens/Collaborators\";\nimport SupportUsScreen from \"./frontend/screens/SupportUs\";\nimport ReportABugScreen from \"./frontend/screens/ReportABug\";\nimport FeedbackScreen from \"./frontend/screens/Feedback\";\nimport TermsAndConditionScreen from \"./frontend/screens/TermsAndCondition\";\nimport HabitsScreen from \"./frontend/screens/Habits\";\nimport CreateHabitScreen from \"./frontend/screens/PutHabits/CreateHabit\";\nimport ComingSoonScreen from \"./frontend/screens/ComingSoon\";\nimport ModifyHabitScreen from \"./frontend/screens/PutHabits/ModifyHabit\";\nimport AllHabitsScreen from \"./frontend/screens/AllHabits\";\nimport GreenLightTheme from \"./frontend/resources/themes/light/GreenTheme\";\nimport OrangeLightTheme from \"./frontend/resources/themes/light/OrangeTheme\";\nimport BlueLightTheme from \"./frontend/resources/themes/light/BlueTheme\";\nimport PurpleLightTheme from \"./frontend/resources/themes/light/PurpleTheme\";\nimport RedLightTheme from \"./frontend/resources/themes/light/RedTheme\";\nimport GreenDarkTheme from \"./frontend/resources/themes/dark/GreenTheme\";\nimport OrangeDarkTheme from \"./frontend/resources/themes/dark/OrangeTheme\";\nimport BlueDarkTheme from \"./frontend/resources/themes/dark/BlueTheme\";\nimport PurpleDarkTheme from \"./frontend/resources/themes/dark/PurpleTheme\";\nimport RedDarkTheme from \"./frontend/resources/themes/dark/RedTheme\";\nimport { AuthContext } from \"./frontend/Context\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState('green'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      color = _useState4[0],\n      setColor = _useState4[1];\n\n  var _useState5 = useState('light'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mode = _useState6[0],\n      setMode = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refreshing = _useState8[0],\n      setRefreshing = _useState8[1];\n\n  var authContext = useMemo(function () {\n    return {\n      logIn: function logIn(generatedToken) {\n        setToken(generatedToken);\n      },\n      signOut: function signOut() {\n        setToken(null);\n      },\n      changeColorTheme: function changeColorTheme(selectedColor) {\n        setColor(selectedColor);\n      },\n      changeModeTheme: function changeModeTheme(selectedMode) {\n        setMode(selectedMode);\n      },\n      changeRefreshing: function changeRefreshing(refreshMode) {\n        setRefreshing(refreshMode);\n      },\n      getToken: token,\n      getColor: color,\n      getMode: mode,\n      getRefreshing: refreshing\n    };\n  }, [token, setToken, color, setColor, mode, setMode, refreshing, setRefreshing]);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, mode == 'light' ? color == 'green' ? React.createElement(NavContainer, {\n    token: token,\n    theme: GreenLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }) : color == 'orange' ? React.createElement(NavContainer, {\n    token: token,\n    theme: OrangeLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }) : color == 'blue' ? React.createElement(NavContainer, {\n    token: token,\n    theme: BlueLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }) : color == 'purple' ? React.createElement(NavContainer, {\n    token: token,\n    theme: PurpleLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }) : color == 'red' ? React.createElement(NavContainer, {\n    token: token,\n    theme: RedLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }) : React.createElement(NavContainer, {\n    token: token,\n    theme: GreenLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }) : mode == 'dark' ? color == 'green' ? React.createElement(NavContainer, {\n    token: token,\n    theme: GreenDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }) : color == 'orange' ? React.createElement(NavContainer, {\n    token: token,\n    theme: OrangeDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }) : color == 'blue' ? React.createElement(NavContainer, {\n    token: token,\n    theme: BlueDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }) : color == 'purple' ? React.createElement(NavContainer, {\n    token: token,\n    theme: PurpleDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }) : color == 'red' ? React.createElement(NavContainer, {\n    token: token,\n    theme: RedDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }\n  }) : React.createElement(NavContainer, {\n    token: token,\n    theme: GreenDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }\n  }) : React.createElement(NavContainer, {\n    token: token,\n    theme: GreenLightTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction NavContainer(props) {\n  return React.createElement(NavigationContainer, {\n    theme: props.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 3\n    }\n  }, props.token ? React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AchievementScreen\",\n    component: AchievementScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileEditScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SettingsScreen\",\n    component: SettingsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateHabitScreen\",\n    component: CreateHabitScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ModifyHabitScreen\",\n    component: ModifyHabitScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SupportUsScreen\",\n    component: SupportUsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AboutScreen\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CollaboratorsScreen\",\n    component: CollaboratorsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"FeedbackScreen\",\n    component: FeedbackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ReportABugScreen\",\n    component: ReportABugScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AllHabitsScreen\",\n    component: AllHabitsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TermsAndConditionScreen\",\n    component: TermsAndConditionScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EvolutionScreen\",\n    component: EvolutionScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 6\n    }\n  })) : React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      title: 'Login'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignupScreen\",\n    component: SignupScreen,\n    options: {\n      title: 'Sign up'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"VerifyEmailSignUp\",\n    component: VerifyEmailSignUpScreen,\n    options: {\n      title: 'Verify Email Sign Up'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"PasswordScreen\",\n    component: PasswordScreen,\n    options: {\n      title: 'Forgot Password'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NewPassword\",\n    component: NewPasswordScreen,\n    options: {\n      title: 'New Password'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 6\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"VerifyEmailPassword\",\n    component: VerifyEmailPasswordScreen,\n    options: {\n      title: 'Verify Email Password'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 6\n    }\n  })));\n}\n\nfunction HomeScreen(props) {\n  var _this = this;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalVisible = _useState10[0],\n      setModalVisible = _useState10[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Tab.Navigator, {\n    initialRouteName: \"TabOne\",\n    backBehavior: \"order\",\n    tabBarOptions: {\n      activeTintColor: colors.Quinary,\n      inactiveTintColor: colors.background,\n      style: {\n        backgroundColor: colors.Tertiary\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Habit\",\n    component: HabitsScreen,\n    options: {\n      tabBarLabel: 'Habit',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"clipboard-check\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 8\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Calendar\",\n    component: Calendar,\n    options: {\n      tabBarLabel: 'Calendar',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"calendar\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 8\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: 'TabMiddle',\n    component: ComingSoonScreen,\n    listeners: {\n      tabPress: function tabPress(e) {\n        setModalVisible(true);\n        e.preventDefault();\n      }\n    },\n    options: {\n      tabBarLabel: function tabBarLabel() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(Image, {\n          source: require(\"./frontend/resources/images/PlusSign.png\"),\n          resizeMode: \"contain\",\n          style: {\n            width: 35,\n            height: 35,\n            tintColor: colors.background\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 8\n          }\n        });\n      },\n      tabBarButton: function tabBarButton(props) {\n        return React.createElement(CustomTabBarButton, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 32\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Pomodoro\",\n    component: Pomodoro,\n    options: {\n      tabBarLabel: 'Pomodoro',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"clock\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 8\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Reflect\",\n    component: Reflect,\n    options: {\n      tabBarLabel: 'Reflect',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"notebook\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 8\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  })), React.createElement(BottomMenu, {\n    navigation: props.navigation,\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction Calendar(props) {\n  return React.createElement(ComingSoonScreen, {\n    title: \"Calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Pomodoro(props) {\n  return React.createElement(ComingSoonScreen, {\n    title: \"Pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction Reflect(props) {\n  return React.createElement(ComingSoonScreen, {\n    title: \"Reflect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction CustomTabBarButton(_ref6) {\n  var children = _ref6.children,\n      onPress = _ref6.onPress;\n\n  var _useTheme2 = useTheme(),\n      colors = _useTheme2.colors;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 1,\n    style: {\n      top: -30,\n      width: 70,\n      height: 70,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.Quaternary,\n      width: 70,\n      height: 70,\n      borderRadius: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 4\n    }\n  }, children));\n}","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/App.js"],"names":["React","useState","useMemo","MaterialCommunityIcons","createBottomTabNavigator","createStackNavigator","NavigationContainer","useTheme","BottomMenu","LoginScreen","SignupScreen","VerifyEmailSignUpScreen","PasswordScreen","NewPasswordScreen","VerifyEmailPasswordScreen","EvolutionScreen","SettingsScreen","ProfileEditScreen","AchievementScreen","AboutScreen","CollaboratorsScreen","SupportUsScreen","ReportABugScreen","FeedbackScreen","TermsAndConditionScreen","HabitsScreen","CreateHabitScreen","ComingSoonScreen","ModifyHabitScreen","AllHabitsScreen","GreenLightTheme","OrangeLightTheme","BlueLightTheme","PurpleLightTheme","RedLightTheme","GreenDarkTheme","OrangeDarkTheme","BlueDarkTheme","PurpleDarkTheme","RedDarkTheme","AuthContext","Tab","Stack","App","token","setToken","color","setColor","mode","setMode","refreshing","setRefreshing","authContext","logIn","generatedToken","signOut","changeColorTheme","selectedColor","changeModeTheme","selectedMode","changeRefreshing","refreshMode","getToken","getColor","getMode","getRefreshing","NavContainer","props","theme","HomeScreen","title","colors","modalVisible","setModalVisible","activeTintColor","Quinary","inactiveTintColor","background","style","backgroundColor","Tertiary","tabBarLabel","tabBarIcon","size","Calendar","tabPress","e","preventDefault","focused","require","width","height","tintColor","tabBarButton","Pomodoro","Reflect","navigation","CustomTabBarButton","children","onPress","top","justifyContent","alignItems","Quaternary","borderRadius"],"mappings":"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","sourcesContent":["// React\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Image, View, TouchableOpacity } from 'react-native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// Navigation\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer, useTheme } from '@react-navigation/native';\r\n\r\n//Screens\r\nimport BottomMenu from './frontend/components/BottomMenu';\r\n\r\nimport LoginScreen from './frontend/screens/Login';\r\nimport SignupScreen from './frontend/screens/Signup';\r\nimport VerifyEmailSignUpScreen from './frontend/screens/VerifyEmailSignUp';\r\nimport PasswordScreen from './frontend/screens/AccountRecovery';\r\nimport NewPasswordScreen from './frontend/screens/NewPassword';\r\nimport VerifyEmailPasswordScreen from './frontend/screens/VerifyEmailPassword';\r\nimport EvolutionScreen from \"./frontend/screens/Evolution\"\r\nimport SettingsScreen from './frontend/screens/Settings';\r\nimport ProfileEditScreen from './frontend/screens/Profile';\r\nimport AchievementScreen from './frontend/screens/Achievement';\r\nimport AboutScreen from './frontend/screens/About';\r\nimport CollaboratorsScreen from './frontend/screens/Collaborators';\r\nimport SupportUsScreen from './frontend/screens/SupportUs';\r\nimport ReportABugScreen from './frontend/screens/ReportABug';\r\nimport FeedbackScreen from './frontend/screens/Feedback';\r\nimport TermsAndConditionScreen from './frontend/screens/TermsAndCondition';\r\nimport HabitsScreen from './frontend/screens/Habits';\r\nimport CreateHabitScreen from './frontend/screens/PutHabits/CreateHabit';\r\nimport ComingSoonScreen from './frontend/screens/ComingSoon';\r\nimport ModifyHabitScreen from './frontend/screens/PutHabits/ModifyHabit';\r\nimport AllHabitsScreen from './frontend/screens/AllHabits';\r\n\r\n// Colour Themes\r\nimport GreenLightTheme from './frontend/resources/themes/light/GreenTheme';\r\nimport OrangeLightTheme from './frontend/resources/themes/light/OrangeTheme';\r\nimport BlueLightTheme from './frontend/resources/themes/light/BlueTheme';\r\nimport PurpleLightTheme from './frontend/resources/themes/light/PurpleTheme';\r\nimport RedLightTheme from './frontend/resources/themes/light/RedTheme';\r\nimport GreenDarkTheme from './frontend/resources/themes/dark/GreenTheme';\r\nimport OrangeDarkTheme from './frontend/resources/themes/dark/OrangeTheme';\r\nimport BlueDarkTheme from './frontend/resources/themes/dark/BlueTheme';\r\nimport PurpleDarkTheme from './frontend/resources/themes/dark/PurpleTheme';\r\nimport RedDarkTheme from './frontend/resources/themes/dark/RedTheme';\r\n\r\nimport { AuthContext } from './frontend/Context';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n\t// Global variables within the app\r\n\tconst [token, setToken] = useState(null);\r\n\tconst [color, setColor] = useState('green');\r\n\tconst [mode, setMode] = useState('light');\r\n\tconst [refreshing, setRefreshing] = useState(false);\r\n\r\n\tconst authContext = useMemo(() => {\r\n\t\treturn {\r\n\t\t\tlogIn: (generatedToken) => {\r\n\t\t\t\tsetToken(generatedToken);\r\n\t\t\t},\r\n\t\t\tsignOut: () => {\r\n\t\t\t\tsetToken(null);\r\n\t\t\t},\r\n\t\t\tchangeColorTheme: (selectedColor) => {\r\n\t\t\t\tsetColor(selectedColor);\r\n\t\t\t},\r\n\t\t\tchangeModeTheme: (selectedMode) => {\r\n\t\t\t\tsetMode(selectedMode);\r\n\t\t\t},\r\n\t\t\tchangeRefreshing: (refreshMode) => {\r\n\t\t\t\tsetRefreshing(refreshMode);\r\n\t\t\t},\r\n\t\t\tgetToken: token,\r\n\t\t\tgetColor: color,\r\n\t\t\tgetMode: mode,\r\n\t\t\tgetRefreshing: refreshing,\r\n\t\t};\r\n\t}, [\r\n\t\ttoken,\r\n\t\tsetToken,\r\n\t\tcolor,\r\n\t\tsetColor,\r\n\t\tmode,\r\n\t\tsetMode,\r\n\t\trefreshing,\r\n\t\tsetRefreshing,\r\n\t]);\r\n\r\n\t// \"Main\" or start of program\r\n\treturn (\r\n\t\t<AuthContext.Provider value={authContext}>\r\n\t\t\t{mode == 'light' ? (\r\n\t\t\t\tcolor == 'green' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={GreenLightTheme} />\r\n\t\t\t\t) : color == 'orange' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={OrangeLightTheme} />\r\n\t\t\t\t) : color == 'blue' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={BlueLightTheme} />\r\n\t\t\t\t) : color == 'purple' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={PurpleLightTheme} />\r\n\t\t\t\t) : color == 'red' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={RedLightTheme} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavContainer token={token} theme={GreenLightTheme} />\r\n\t\t\t\t)\r\n\t\t\t) : mode == 'dark' ? (\r\n\t\t\t\tcolor == 'green' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={GreenDarkTheme} />\r\n\t\t\t\t) : color == 'orange' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={OrangeDarkTheme} />\r\n\t\t\t\t) : color == 'blue' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={BlueDarkTheme} />\r\n\t\t\t\t) : color == 'purple' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={PurpleDarkTheme} />\r\n\t\t\t\t) : color == 'red' ? (\r\n\t\t\t\t\t<NavContainer token={token} theme={RedDarkTheme} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<NavContainer token={token} theme={GreenDarkTheme} />\r\n\t\t\t\t)\r\n\t\t\t) : (\r\n\t\t\t\t<NavContainer token={token} theme={GreenLightTheme} />\r\n\t\t\t)}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n}\r\n\r\n// Determines the appropriate stack to use based on token - colour theme and token are provided\r\nfunction NavContainer(props) {\r\n\treturn (\r\n\t\t<NavigationContainer theme={props.theme}>\r\n\t\t\t{props.token ? (\r\n\t\t\t\t<Stack.Navigator headerMode='none'>\r\n\t\t\t\t\t<Stack.Screen name='HomeScreen' component={HomeScreen} />\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='AchievementScreen'\r\n\t\t\t\t\t\tcomponent={AchievementScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen name='ProfileScreen' component={ProfileEditScreen} />\r\n\t\t\t\t\t<Stack.Screen name='SettingsScreen' component={SettingsScreen} />\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='CreateHabitScreen'\r\n\t\t\t\t\t\tcomponent={CreateHabitScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='ModifyHabitScreen'\r\n\t\t\t\t\t\tcomponent={ModifyHabitScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen name='SupportUsScreen' component={SupportUsScreen} />\r\n\t\t\t\t\t<Stack.Screen name='AboutScreen' component={AboutScreen} />\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='CollaboratorsScreen'\r\n\t\t\t\t\t\tcomponent={CollaboratorsScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen name='FeedbackScreen' component={FeedbackScreen} />\r\n\t\t\t\t\t<Stack.Screen name='ReportABugScreen' component={ReportABugScreen} />\r\n\t\t\t\t\t<Stack.Screen name='AllHabitsScreen' component={AllHabitsScreen} />\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='TermsAndConditionScreen'\r\n\t\t\t\t\t\tcomponent={TermsAndConditionScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='EvolutionScreen'\r\n\t\t\t\t\t\tcomponent={EvolutionScreen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack.Navigator>\r\n\t\t\t) : (\r\n\t\t\t\t<Stack.Navigator headerMode='none'>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='LoginScreen'\r\n\t\t\t\t\t\tcomponent={LoginScreen}\r\n\t\t\t\t\t\toptions={{ title: 'Login' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='SignupScreen'\r\n\t\t\t\t\t\tcomponent={SignupScreen}\r\n\t\t\t\t\t\toptions={{ title: 'Sign up' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='VerifyEmailSignUp'\r\n\t\t\t\t\t\tcomponent={VerifyEmailSignUpScreen}\r\n\t\t\t\t\t\toptions={{ title: 'Verify Email Sign Up' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='PasswordScreen'\r\n\t\t\t\t\t\tcomponent={PasswordScreen}\r\n\t\t\t\t\t\toptions={{ title: 'Forgot Password' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='NewPassword'\r\n\t\t\t\t\t\tcomponent={NewPasswordScreen}\r\n\t\t\t\t\t\toptions={{ title: 'New Password' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Stack.Screen\r\n\t\t\t\t\t\tname='VerifyEmailPassword'\r\n\t\t\t\t\t\tcomponent={VerifyEmailPasswordScreen}\r\n\t\t\t\t\t\toptions={{ title: 'Verify Email Password' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Stack.Navigator>\r\n\t\t\t)}\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n\r\n// What the user will see upon logging in\r\nfunction HomeScreen(props) {\r\n\tconst { colors } = useTheme();\r\n\tconst [modalVisible, setModalVisible] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tab.Navigator\r\n\t\t\t\tinitialRouteName='TabOne'\r\n\t\t\t\tbackBehavior='order'\r\n\t\t\t\ttabBarOptions={{\r\n\t\t\t\t\tactiveTintColor: colors.Quinary,\r\n\t\t\t\t\tinactiveTintColor: colors.background,\r\n\t\t\t\t\tstyle: { backgroundColor: colors.Tertiary },\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname='Habit'\r\n\t\t\t\t\tcomponent={HabitsScreen}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttabBarLabel: 'Habit',\r\n\t\t\t\t\t\ttabBarIcon: ({ color, size }) => (\r\n\t\t\t\t\t\t\t<MaterialCommunityIcons\r\n\t\t\t\t\t\t\t\tname='clipboard-check'\r\n\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname='Calendar'\r\n\t\t\t\t\tcomponent={Calendar}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttabBarLabel: 'Calendar',\r\n\t\t\t\t\t\ttabBarIcon: ({ color, size }) => (\r\n\t\t\t\t\t\t\t<MaterialCommunityIcons\r\n\t\t\t\t\t\t\t\tname='calendar'\r\n\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname={'TabMiddle'}\r\n\t\t\t\t\tcomponent={ComingSoonScreen}\r\n\t\t\t\t\tlisteners={{\r\n\t\t\t\t\t\ttabPress: (e) => {\r\n\t\t\t\t\t\t\tsetModalVisible(true);\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttabBarLabel: () => {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttabBarIcon: ({ focused }) => (\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tsource={require('./frontend/resources/images/PlusSign.png')}\r\n\t\t\t\t\t\t\t\tresizeMode='contain'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: 35,\r\n\t\t\t\t\t\t\t\t\theight: 35,\r\n\t\t\t\t\t\t\t\t\ttintColor: colors.background,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\ttabBarButton: (props) => <CustomTabBarButton {...props} />,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname='Pomodoro'\r\n\t\t\t\t\tcomponent={Pomodoro}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttabBarLabel: 'Pomodoro',\r\n\t\t\t\t\t\ttabBarIcon: ({ color, size }) => (\r\n\t\t\t\t\t\t\t<MaterialCommunityIcons name='clock' color={color} size={size} />\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Tab.Screen\r\n\t\t\t\t\tname='Reflect'\r\n\t\t\t\t\tcomponent={Reflect}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\ttabBarLabel: 'Reflect',\r\n\t\t\t\t\t\ttabBarIcon: ({ color, size }) => (\r\n\t\t\t\t\t\t\t<MaterialCommunityIcons\r\n\t\t\t\t\t\t\t\tname='notebook'\r\n\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</Tab.Navigator>\r\n\t\t\t<BottomMenu\r\n\t\t\t\tnavigation={props.navigation}\r\n\t\t\t\tmodalVisible={modalVisible}\r\n\t\t\t\tsetModalVisible={setModalVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n// TODO: Replace the below with imported screens\r\nfunction Calendar(props) {\r\n\treturn <ComingSoonScreen title='Calendar' />;\r\n}\r\n\r\nfunction Pomodoro(props) {\r\n\treturn <ComingSoonScreen title='Pomodoro' />;\r\n}\r\n\r\nfunction Reflect(props) {\r\n\treturn <ComingSoonScreen title='Reflect' />;\r\n}\r\n\r\n// The 'create' button in the bottom navigation bar\r\nfunction CustomTabBarButton({ children, onPress }) {\r\n\tconst { colors } = useTheme();\r\n\treturn (\r\n\t\t<TouchableOpacity\r\n\t\t\tactiveOpacity={1}\r\n\t\t\tstyle={{\r\n\t\t\t\ttop: -30,\r\n\t\t\t\twidth: 70,\r\n\t\t\t\theight: 70,\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t}}\r\n\t\t\tonPress={onPress}\r\n\t\t>\r\n\t\t\t<View\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: colors.Quaternary,\r\n\t\t\t\t\twidth: 70,\r\n\t\t\t\t\theight: 70,\r\n\t\t\t\t\tborderRadius: 35,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</View>\r\n\t\t</TouchableOpacity>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
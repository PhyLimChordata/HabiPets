{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\AccountRecovery.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styling/Authentication\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction PasswordScreen(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      primaryInfo = _useState2[0],\n      setPrimaryInfo = _useState2[1];\n\n  var _useState3 = useState({\n    backgroundColor: colors.Secondary,\n    padding: 10,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    fontSize: 15,\n    borderRadius: 5,\n    marginBottom: 20,\n    width: 300\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputStyle = _useState4[0],\n      setInputStyle = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var updatingPrimaryInfo = function updatingPrimaryInfo(text) {\n    setPrimaryInfo(text);\n    setError('');\n    setInputStyle({\n      backgroundColor: colors.Secondary,\n      padding: 10,\n      borderWidth: 0,\n      borderStyle: 'solid',\n      fontSize: 15,\n      borderRadius: 5,\n      marginBottom: 20,\n      width: 300\n    });\n  };\n\n  var forgetPassword = function forgetPassword() {\n    fetch('http://localhost:5000/api/v1.0.0/user/check_user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        primaryInfo: primaryInfo\n      })\n    }).then(function (res) {\n      if (primaryInfo == '') {\n        setError('This is a required field');\n      }\n\n      if (res.status == 200) {\n        res.json().then(function (data) {\n          props.navigation.push('NewPassword', {\n            email: data.email\n          });\n        });\n      } else if (res.status == 500) {\n        setError('Something wrong happened internally...');\n      } else if (res.status == 404) {\n        setError('User does not exist');\n      } else if (res.status == 403) {\n        setError('The user has not activated their account');\n      }\n\n      if (res.status != 200) {\n        setInputStyle({\n          backgroundColor: colors.Secondary,\n          padding: 10,\n          borderWidth: 3,\n          borderColor: 'red',\n          borderStyle: 'solid',\n          fontSize: 15,\n          borderRadius: 5,\n          width: 300\n        });\n      }\n    }).catch();\n  };\n\n  return React.createElement(View, {\n    style: styles(colors).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).authenticationLogo,\n    source: require(\"../resources/images/Logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles(colors).header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Account Recovery\"), React.createElement(Text, {\n    style: styles(colors).explanationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, ' ', \"Enter either your Email or Username and an email will be sent with instructions.\", ' '), React.createElement(View, {\n    style: styles(colors).inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: inputStyle,\n    value: primaryInfo,\n    placeholder: \"Please enter an Email or Username\",\n    onChangeText: function onChangeText(text) {\n      return updatingPrimaryInfo(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: styles(colors).errorMessageRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, error))), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: styles(colors).authenticationButton,\n    onPress: function onPress() {\n      return forgetPassword();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"Continue\")), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: styles(colors).authenticationSpecialButton,\n    onPress: function onPress() {\n      return props.navigation.push('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Back to Login\")));\n}\n\nexport default PasswordScreen;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/AccountRecovery.js"],"names":["React","useState","useContext","styles","useTheme","PasswordScreen","props","colors","primaryInfo","setPrimaryInfo","backgroundColor","Secondary","padding","borderWidth","borderStyle","fontSize","borderRadius","marginBottom","width","inputStyle","setInputStyle","error","setError","updatingPrimaryInfo","text","forgetPassword","fetch","method","headers","body","JSON","stringify","then","res","status","json","data","navigation","push","email","borderColor","catch","container","authenticationLogo","require","header","textTitle","explanationText","inputContainer","errorMessageRight","authenticationButton","authenticationButtonText","authenticationSpecialButton"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport { View, Text, TextInput, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport styles from '../styling/Authentication';\r\n\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction PasswordScreen(props) {\r\n\tconst { colors } = useTheme();\r\n\tconst [primaryInfo, setPrimaryInfo] = useState('');\r\n\tconst [inputStyle, setInputStyle] = useState({\r\n\t\tbackgroundColor: colors.Secondary,\r\n\t\tpadding: 10,\r\n\t\tborderWidth: 0,\r\n\t\tborderStyle: 'solid',\r\n\t\tfontSize: 15,\r\n\t\tborderRadius: 5,\r\n\t\tmarginBottom: 20,\r\n\t\twidth: 300,\r\n\t});\r\n\tconst [error, setError] = useState('');\r\n\r\n\tconst updatingPrimaryInfo = (text) => {\r\n\t\tsetPrimaryInfo(text);\r\n\t\tsetError('');\r\n\t\tsetInputStyle({\r\n\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderWidth: 0,\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontSize: 15,\r\n\t\t\tborderRadius: 5,\r\n\t\t\tmarginBottom: 20,\r\n\t\t\twidth: 300,\r\n\t\t});\r\n\t};\r\n\r\n\tconst forgetPassword = () => {\r\n\t\tfetch('http://localhost:5000/api/v1.0.0/user/check_user', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tprimaryInfo: primaryInfo,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (primaryInfo == '') {\r\n\t\t\t\t\tsetError('This is a required field');\r\n\t\t\t\t}\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\tprops.navigation.push('NewPassword', { email: data.email });\r\n\t\t\t\t\t});\r\n\t\t\t\t} else if (res.status == 500) {\r\n\t\t\t\t\tsetError('Something wrong happened internally...');\r\n\t\t\t\t} else if (res.status == 404) {\r\n\t\t\t\t\tsetError('User does not exist');\r\n\t\t\t\t} else if (res.status == 403) {\r\n\t\t\t\t\tsetError('The user has not activated their account');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (res.status != 200) {\r\n\t\t\t\t\tsetInputStyle({\r\n\t\t\t\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\t\t\t\tpadding: 10,\r\n\t\t\t\t\t\tborderWidth: 3,\r\n\t\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\t\tborderStyle: 'solid',\r\n\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\tborderRadius: 5,\r\n\t\t\t\t\t\twidth: 300,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles(colors).container}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).authenticationLogo}\r\n\t\t\t\tsource={require('../resources/images/Logo.png')}\r\n\t\t\t/>\r\n\t\t\t<View style={styles(colors).header}>\r\n\t\t\t\t<Text style={styles(colors).textTitle}>Account Recovery</Text>\r\n\t\t\t\t<Text style={styles(colors).explanationText}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tEnter either your Email or Username and an email will be sent with\r\n\t\t\t\t\tinstructions.{' '}\r\n\t\t\t\t</Text>\r\n\r\n\t\t\t\t<View style={styles(colors).inputContainer}>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tstyle={inputStyle}\r\n\t\t\t\t\t\tvalue={primaryInfo}\r\n\t\t\t\t\t\tplaceholder='Please enter an Email or Username'\r\n\t\t\t\t\t\tonChangeText={(text) => updatingPrimaryInfo(text)}\r\n\t\t\t\t\t></TextInput>\r\n\t\t\t\t\t<Text style={styles(colors).errorMessageRight}>{error}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={styles(colors).authenticationButton}\r\n\t\t\t\tonPress={() => forgetPassword()}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>Continue</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={styles(colors).authenticationSpecialButton}\r\n\t\t\t\tonPress={() => props.navigation.push('LoginScreen')}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>\r\n\t\t\t\t\tBack to Login\r\n\t\t\t\t</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default PasswordScreen;\r\n"]},"metadata":{},"sourceType":"module"}
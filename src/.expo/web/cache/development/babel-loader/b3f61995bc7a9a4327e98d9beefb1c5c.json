{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\Achievement.js\",\n    _this2 = this;\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport AchievementStyle from \"../styling/Achievement\";\nimport { ProgressBar } from 'react-native-paper';\nimport MenuHeader from \"../components/MenuHeader\";\nimport { useFonts, Roboto_900Black } from '@expo-google-fonts/roboto';\nimport { useTheme } from '@react-navigation/native';\nvar achievements = [{\n  category: 'Streaks',\n  progresses: [{\n    progress: 0.3,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.5,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.8,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }]\n}, {\n  category: 'Creatures',\n  progresses: [{\n    progress: 0.3,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.3,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.3,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }]\n}, {\n  category: 'Accountability',\n  progresses: [{\n    progress: 0.3,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.8,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }, {\n    progress: 0.5,\n    iconSrc: require(\"../resources/assets/icon.png\")\n  }]\n}];\n\nfunction AchievementScreen(props) {\n  var _this = this;\n\n  var _useFonts = useFonts({\n    Roboto_900Black: Roboto_900Black\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var styles = AchievementStyle(colors, Dimensions.get('screen').width, Dimensions.get('screen').height);\n\n  if (!fontsLoaded) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return React.createElement(SafeAreaView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 4\n      }\n    }, React.createElement(MenuHeader, {\n      text: \"Achievement\",\n      navigation: props.navigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }), React.createElement(View, {\n      style: styles.headContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, achievements.map(function (item) {\n      return React.createElement(OneCategory, {\n        key: item.category,\n        category: item.category,\n        progresses: item.progresses,\n        styles: styles,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      });\n    })));\n  }\n}\n\nvar OneCategory = function OneCategory(props) {\n  return React.createElement(View, {\n    key: props.key,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: [props.styles.achievementName, props.styles.textStyles, {\n      fontFamily: 'Roboto_900Black'\n    }],\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }\n  }, props.category), React.createElement(View, {\n    style: props.styles.achievementRow,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, props.progresses.map(function (item, index) {\n    return React.createElement(OneAchievement, {\n      key: index,\n      progress: item.progress,\n      srcPath: item.iconSrc,\n      styles: props.styles,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }\n    });\n  })));\n};\n\nvar OneAchievement = function OneAchievement(props) {\n  var sty = props.progress > 0.33 ? props.progress > 0.66 ? props.styles.achievementGold : props.styles.achievementSilver : props.styles.achievementBronze;\n  return React.createElement(View, {\n    style: props.styles.achievementContainer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: [props.styles.achievementIcon, sty],\n    source: props.srcPath,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }\n  }), React.createElement(ProgressBar, {\n    progress: props.progress,\n    style: props.styles.progressBar,\n    color: \"#75D6FF\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default AchievementScreen;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/Achievement.js"],"names":["React","AchievementStyle","ProgressBar","MenuHeader","useFonts","Roboto_900Black","useTheme","achievements","category","progresses","progress","iconSrc","require","AchievementScreen","props","fontsLoaded","colors","styles","Dimensions","get","width","height","navigation","headContainer","map","item","OneCategory","key","achievementName","textStyles","fontFamily","achievementRow","index","OneAchievement","sty","achievementGold","achievementSilver","achievementBronze","achievementContainer","achievementIcon","srcPath","progressBar"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,gBAAP;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,UAAP;AAEA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,2BAA1C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAIA,IAAIC,YAAY,GAAG,CAClB;AACCC,EAAAA,QAAQ,EAAE,SADX;AAECC,EAAAA,UAAU,EAAE,CACX;AACCC,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GADW,EAKX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GALW,EASX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GATW;AAFb,CADkB,EAkBlB;AACCJ,EAAAA,QAAQ,EAAE,WADX;AAECC,EAAAA,UAAU,EAAE,CACX;AACCC,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GADW,EAKX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GALW,EASX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GATW;AAFb,CAlBkB,EAmClB;AACCJ,EAAAA,QAAQ,EAAE,gBADX;AAECC,EAAAA,UAAU,EAAE,CACX;AACCC,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GADW,EAKX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GALW,EASX;AACCF,IAAAA,QAAQ,EAAE,GADX;AAECC,IAAAA,OAAO,EAAEC,OAAO;AAFjB,GATW;AAFb,CAnCkB,CAAnB;;AA8DA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AACjC,kBAAoBV,QAAQ,CAAC;AAC5BC,IAAAA,eAAe,EAAfA;AAD4B,GAAD,CAA5B;AAAA;AAAA,MAAKU,WAAL;;AAIA,kBAAmBT,QAAQ,EAA3B;AAAA,MAAQU,MAAR,aAAQA,MAAR;;AACA,MAAIC,MAAM,GAAGhB,gBAAgB,CAC5Be,MAD4B,EAE5BE,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAFG,EAG5BF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,MAHG,CAA7B;;AAMA,MAAI,CAACN,WAAL,EAAkB;AACjB,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAFD,MAEO;AACN,WACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,aAAjB;AAA+B,MAAA,UAAU,EAAED,KAAK,CAACQ,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAGC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEhB,YAAY,CAACiB,GAAb,CAAiB,UAACC,IAAD;AAAA,aACjB,oBAAC,WAAD;AACC,QAAA,GAAG,EAAEA,IAAI,CAACjB,QADX;AAEC,QAAA,QAAQ,EAAEiB,IAAI,CAACjB,QAFhB;AAGC,QAAA,UAAU,EAAEiB,IAAI,CAAChB,UAHlB;AAIC,QAAA,MAAM,EAAEQ,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB;AAAA,KAAjB,CADF,CAHD,CADD;AAgBA;AACD;;AAMD,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACZ,KAAD,EAAW;AAC9B,SACC,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACa,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AACC,IAAA,KAAK,EAAE,CACNb,KAAK,CAACG,MAAN,CAAaW,eADP,EAENd,KAAK,CAACG,MAAN,CAAaY,UAFP,EAGN;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAHM,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEhB,KAAK,CAACN,QAPR,CADD,EAUC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,KAAK,CAACG,MAAN,CAAac,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEjB,KAAK,CAACL,UAAN,CAAiBe,GAAjB,CAAqB,UAACC,IAAD,EAAOO,KAAP;AAAA,WACrB,oBAAC,cAAD;AACC,MAAA,GAAG,EAAEA,KADN;AAEC,MAAA,QAAQ,EAAEP,IAAI,CAACf,QAFhB;AAGC,MAAA,OAAO,EAAEe,IAAI,CAACd,OAHf;AAIC,MAAA,MAAM,EAAEG,KAAK,CAACG,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAArB,CADF,CAVD,CADD;AAuBA,CAxBD;;AA0BA,IAAMgB,cAAc,GAAG,SAAjBA,cAAiB,CAACnB,KAAD,EAAW;AACjC,MAAMoB,GAAG,GACRpB,KAAK,CAACJ,QAAN,GAAiB,IAAjB,GACGI,KAAK,CAACJ,QAAN,GAAiB,IAAjB,GACCI,KAAK,CAACG,MAAN,CAAakB,eADd,GAECrB,KAAK,CAACG,MAAN,CAAamB,iBAHjB,GAIGtB,KAAK,CAACG,MAAN,CAAaoB,iBALjB;AAMA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,KAAK,CAACG,MAAN,CAAaqB,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAE,CAACxB,KAAK,CAACG,MAAN,CAAasB,eAAd,EAA+BL,GAA/B,CADR;AAEC,IAAA,MAAM,EAAEpB,KAAK,CAAC0B,OAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKC,oBAAC,WAAD;AACC,IAAA,QAAQ,EAAE1B,KAAK,CAACJ,QADjB;AAEC,IAAA,KAAK,EAAEI,KAAK,CAACG,MAAN,CAAawB,WAFrB;AAGC,IAAA,KAAK,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD;AAaA,CApBD;;AAsBA,eAAe5B,iBAAf","sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, Dimensions, SafeAreaView } from 'react-native';\r\nimport AchievementStyle from '../styling/Achievement';\r\nimport { ProgressBar } from 'react-native-paper';\r\nimport MenuHeader from '../components/MenuHeader';\r\n\r\nimport { useFonts, Roboto_900Black } from '@expo-google-fonts/roboto';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\n// data from database\r\n\r\nlet achievements = [\r\n\t{\r\n\t\tcategory: 'Streaks',\r\n\t\tprogresses: [\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.3,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.5,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.8,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategory: 'Creatures',\r\n\t\tprogresses: [\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.3,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.3,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.3,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tcategory: 'Accountability',\r\n\t\tprogresses: [\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.3,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.8,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tprogress: 0.5,\r\n\t\t\t\ticonSrc: require('../resources/assets/icon.png'),\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n];\r\n\r\n// // https://forums.expo.dev/t/text-cut-off-on-oneplus-device/4999/10\r\n\r\n// let styles =\r\n// StyleSheetFactory.getSheet(\r\n// \tDimensions.get('screen').width,\r\n// \tDimensions.get('screen').height\r\n// );\r\n\r\nfunction AchievementScreen(props) {\r\n\tlet [fontsLoaded] = useFonts({\r\n\t\tRoboto_900Black,\r\n\t});\r\n\r\n\tconst { colors } = useTheme();\r\n\tlet styles = AchievementStyle(\r\n\t\tcolors,\r\n\t\tDimensions.get('screen').width,\r\n\t\tDimensions.get('screen').height,\r\n\t);\r\n\r\n\tif (!fontsLoaded) {\r\n\t\treturn <View></View>;\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<SafeAreaView>\r\n\t\t\t\t<MenuHeader text='Achievement' navigation={props.navigation} />\r\n\r\n\t\t\t\t<View style={styles.headContainer}>\r\n\t\t\t\t\t{achievements.map((item) => (\r\n\t\t\t\t\t\t<OneCategory\r\n\t\t\t\t\t\t\tkey={item.category}\r\n\t\t\t\t\t\t\tcategory={item.category}\r\n\t\t\t\t\t\t\tprogresses={item.progresses}\r\n\t\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</View>\r\n\t\t\t</SafeAreaView>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\n    \r\n*/\r\n\r\nconst OneCategory = (props) => {\r\n\treturn (\r\n\t\t<View key={props.key}>\r\n\t\t\t<Text\r\n\t\t\t\tstyle={[\r\n\t\t\t\t\tprops.styles.achievementName,\r\n\t\t\t\t\tprops.styles.textStyles,\r\n\t\t\t\t\t{ fontFamily: 'Roboto_900Black' },\r\n\t\t\t\t]}\r\n\t\t\t>\r\n\t\t\t\t{props.category}\r\n\t\t\t</Text>\r\n\t\t\t<View style={props.styles.achievementRow}>\r\n\t\t\t\t{props.progresses.map((item, index) => (\r\n\t\t\t\t\t<OneAchievement\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tprogress={item.progress}\r\n\t\t\t\t\t\tsrcPath={item.iconSrc}\r\n\t\t\t\t\t\tstyles={props.styles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nconst OneAchievement = (props) => {\r\n\tconst sty =\r\n\t\tprops.progress > 0.33\r\n\t\t\t? props.progress > 0.66\r\n\t\t\t\t? props.styles.achievementGold\r\n\t\t\t\t: props.styles.achievementSilver\r\n\t\t\t: props.styles.achievementBronze;\r\n\treturn (\r\n\t\t<View style={props.styles.achievementContainer}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={[props.styles.achievementIcon, sty]}\r\n\t\t\t\tsource={props.srcPath}\r\n\t\t\t/>\r\n\t\t\t<ProgressBar\r\n\t\t\t\tprogress={props.progress}\r\n\t\t\t\tstyle={props.styles.progressBar}\r\n\t\t\t\tcolor='#75D6FF'\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default AchievementScreen;\r\n"]},"metadata":{},"sourceType":"module"}
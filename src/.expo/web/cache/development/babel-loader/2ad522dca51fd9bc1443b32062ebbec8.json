{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\NewPassword.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"../styling/Authentication\";\nimport { useTheme } from '@react-navigation/native';\nimport { AuthContext } from \"../Context\";\n\nfunction NewPassword(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reEnteredPassword = _useState4[0],\n      setReEnteredPassword = _useState4[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var normalInputStyle = {\n    backgroundColor: colors.Secondary,\n    padding: 10,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    fontSize: 15,\n    borderRadius: 5,\n    marginBottom: 20,\n    width: 300\n  };\n\n  var _useState5 = useState(normalInputStyle),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputStyle = _useState6[0],\n      setInputStyle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      spaceAfterError = _useState10[0],\n      setSpaceAfterError = _useState10[1];\n\n  var updatingPassword = function updatingPassword(text) {\n    setPassword(text);\n    setError('');\n    setSpaceAfterError({});\n    setInputStyle(normalInputStyle);\n  };\n\n  var updatingReEnteredPassword = function updatingReEnteredPassword(text) {\n    setReEnteredPassword(text);\n    setError('');\n    setSpaceAfterError({});\n    setInputStyle(normalInputStyle);\n  };\n\n  var _useContext = useContext(AuthContext),\n      resetPassword = _useContext.resetPassword;\n\n  function displayError() {\n    setSpaceAfterError({\n      height: 20\n    });\n    setInputStyle({\n      backgroundColor: colors.Secondary,\n      padding: 10,\n      borderWidth: 3,\n      borderColor: 'red',\n      borderStyle: 'solid',\n      fontSize: 15,\n      borderRadius: 5,\n      width: 300\n    });\n  }\n\n  var attemptSetNewPassword = function attemptSetNewPassword() {\n    if (password == '' || reEnteredPassword == '') {\n      setError('Please enter all parameters');\n      displayError();\n    } else if (password != reEnteredPassword) {\n      setError('Passwords do not match');\n      displayError();\n    } else {\n      fetch('http://localhost:5000/api/v1.0.0/user/pending_password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newPassword: password,\n          email: props.route.params.email\n        })\n      }).then(function (res) {\n        if (res.status == 200) {\n          res.json().then(function (data) {\n            props.navigation.push('VerifyEmailPassword', {\n              password: password,\n              email: props.route.params.email\n            });\n          });\n        } else {\n          displayError();\n        }\n      }).catch();\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles(colors).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).authenticationLogo,\n    source: require(\"../resources/images/Logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles(colors).header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \"Enter a new Password\")), React.createElement(View, {\n    style: styles(colors).inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: inputStyle,\n    value: password,\n    secureTextEntry: true,\n    placeholder: \"*********\",\n    onChangeText: function onChangeText(text) {\n      return updatingPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: spaceAfterError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles(colors).authenticationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, \"ReEnter Password\"), React.createElement(TextInput, {\n    style: inputStyle,\n    value: reEnteredPassword,\n    secureTextEntry: true,\n    placeholder: \"*********\",\n    onChangeText: function onChangeText(text) {\n      return updatingReEnteredPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles(colors).errorMessageRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, error)), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles(colors).authenticationButton,\n    onPress: function onPress() {\n      return attemptSetNewPassword();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, \"Send Email\")), React.createElement(TouchableHighlight, {\n    style: styles(colors).authenticationSpecialButton,\n    onPress: function onPress() {\n      return props.navigation.push('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, \"Back to Login\")));\n}\n\nexport default NewPassword;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/NewPassword.js"],"names":["React","useState","useContext","styles","useTheme","AuthContext","NewPassword","props","password","setPassword","reEnteredPassword","setReEnteredPassword","colors","normalInputStyle","backgroundColor","Secondary","padding","borderWidth","borderStyle","fontSize","borderRadius","marginBottom","width","inputStyle","setInputStyle","error","setError","spaceAfterError","setSpaceAfterError","updatingPassword","text","updatingReEnteredPassword","resetPassword","displayError","height","borderColor","attemptSetNewPassword","fetch","method","headers","body","JSON","stringify","newPassword","email","route","params","then","res","status","json","data","navigation","push","catch","container","authenticationLogo","require","header","textTitle","inputContainer","authenticationText","errorMessageRight","authenticationButton","authenticationButtonText","authenticationSpecialButton"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Text, TextInput, Image, TouchableHighlight } from 'react-native';\r\n\r\nimport styles from '../styling/Authentication';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { AuthContext } from '../Context';\r\n\r\nfunction NewPassword(props) {\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [reEnteredPassword, setReEnteredPassword] = useState('');\r\n\tconst { colors } = useTheme();\r\n\r\n\tconst normalInputStyle = {\r\n\t\tbackgroundColor: colors.Secondary,\r\n\t\tpadding: 10,\r\n\t\tborderWidth: 0,\r\n\t\tborderStyle: 'solid',\r\n\t\tfontSize: 15,\r\n\t\tborderRadius: 5,\r\n\t\tmarginBottom: 20,\r\n\t\twidth: 300,\r\n\t};\r\n\r\n\tconst [inputStyle, setInputStyle] = useState(normalInputStyle);\r\n\r\n\tconst [error, setError] = useState('');\r\n\tconst [spaceAfterError, setSpaceAfterError] = useState({});\r\n\r\n\tconst updatingPassword = (text) => {\r\n\t\tsetPassword(text);\r\n\t\tsetError('');\r\n\t\tsetSpaceAfterError({});\r\n\t\tsetInputStyle(normalInputStyle);\r\n\t};\r\n\r\n\tconst updatingReEnteredPassword = (text) => {\r\n\t\tsetReEnteredPassword(text);\r\n\t\tsetError('');\r\n\t\tsetSpaceAfterError({});\r\n\t\tsetInputStyle(normalInputStyle);\r\n\t};\r\n\r\n\tconst { resetPassword } = useContext(AuthContext);\r\n\r\n\tfunction displayError() {\r\n\t\tsetSpaceAfterError({ height: 20 });\r\n\t\tsetInputStyle({\r\n\t\t\tbackgroundColor: colors.Secondary,\r\n\t\t\tpadding: 10,\r\n\t\t\tborderWidth: 3,\r\n\t\t\tborderColor: 'red',\r\n\t\t\tborderStyle: 'solid',\r\n\t\t\tfontSize: 15,\r\n\t\t\tborderRadius: 5,\r\n\t\t\twidth: 300,\r\n\t\t});\r\n\t}\r\n\r\n\tconst attemptSetNewPassword = () => {\r\n\t\tif (password == '' || reEnteredPassword == '') {\r\n\t\t\tsetError('Please enter all parameters');\r\n\t\t\tdisplayError();\r\n\t\t} else if (password != reEnteredPassword) {\r\n\t\t\tsetError('Passwords do not match');\r\n\t\t\tdisplayError();\r\n\t\t} else {\r\n\t\t\tfetch('http://localhost:5000/api/v1.0.0/user/pending_password', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tnewPassword: password,\r\n\t\t\t\t\temail: props.route.params.email,\r\n\t\t\t\t}),\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\t\tprops.navigation.push('VerifyEmailPassword', {\r\n\t\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t\t\temail: props.route.params.email,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdisplayError();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles(colors).container}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).authenticationLogo}\r\n\t\t\t\tsource={require('../resources/images/Logo.png')}\r\n\t\t\t/>\r\n\t\t\t<View style={styles(colors).header}>\r\n\t\t\t\t<Text style={styles(colors).textTitle}>Enter a new Password</Text>\r\n\t\t\t</View>\r\n\r\n\t\t\t<View style={styles(colors).inputContainer}>\r\n\t\t\t\t<Text style={styles(colors).authenticationText}>Password</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={inputStyle}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\tplaceholder='*********'\r\n\t\t\t\t\tonChangeText={(text) => updatingPassword(text)}\r\n\t\t\t\t></TextInput>\r\n\t\t\t\t<View style={spaceAfterError} />\r\n\t\t\t\t<Text style={styles(colors).authenticationText}>ReEnter Password</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={inputStyle}\r\n\t\t\t\t\tvalue={reEnteredPassword}\r\n\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\tplaceholder='*********'\r\n\t\t\t\t\tonChangeText={(text) => updatingReEnteredPassword(text)}\r\n\t\t\t\t></TextInput>\r\n\t\t\t\t<Text style={styles(colors).errorMessageRight}>{error}</Text>\r\n\t\t\t</View>\r\n\t\t\t<View style={{ height: 10 }} />\r\n\t\t\t<TouchableHighlight\r\n\t\t\t\tstyle={styles(colors).authenticationButton}\r\n\t\t\t\tonPress={() => attemptSetNewPassword()}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>Send Email</Text>\r\n\t\t\t</TouchableHighlight>\r\n\t\t\t<TouchableHighlight\r\n\t\t\t\tstyle={styles(colors).authenticationSpecialButton}\r\n\t\t\t\tonPress={() => props.navigation.push('LoginScreen')}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>\r\n\t\t\t\t\tBack to Login\r\n\t\t\t\t</Text>\r\n\t\t\t</TouchableHighlight>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default NewPassword;\r\n"]},"metadata":{},"sourceType":"module"}
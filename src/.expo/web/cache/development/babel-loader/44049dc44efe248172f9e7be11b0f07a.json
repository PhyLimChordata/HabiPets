{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\Habits.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport styles from \"../styling/HabitsScreen\";\nimport Habits from \"../components/Habits\";\nimport MenuHeader from \"../components/MenuHeader\";\nimport ExperienceBar from \"../components/ExperienceBar\";\nimport { useTheme } from '@react-navigation/native';\nimport { AuthContext } from \"../Context\";\n\nfunction HabitsScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      habits = _useState2[0],\n      setHabits = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hearts = _useState4[0],\n      setHearts = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userHabitId = _useState6[0],\n      setUserHabitId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      experience = _useState8[0],\n      setExperience = _useState8[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      level = _useState10[0],\n      setLevel = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      displayed = _useState12[0],\n      setDisplayed = _useState12[1];\n\n  var scrolling = React.useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken,\n      getRefreshing = _useContext.getRefreshing,\n      changeRefreshing = _useContext.changeRefreshing;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    changeRefreshing(true);\n    displayHabits();\n  }, []);\n  useEffect(function () {\n    if (habits.length == 0 && !displayed) displayHabits();\n  });\n  useEffect(function () {\n    if (getRefreshing) displayHabits();\n  }, [getRefreshing]);\n\n  var displayHabits = function displayHabits() {\n    setDisplayed(true);\n    setRefreshing(true);\n    var date = new Date().getDay();\n    fetch('http://localhost:5000/api/v1.0.0/habit/show_user_habit/' + date, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'authentication-token': getToken\n      }\n    }).then(function (res) {\n      return res.json().then(function (data) {\n        var expValue = parseInt(data.expValue);\n        setTimeout(function () {\n          setHabits(data.habitList);\n          setUserHabitId(data._id);\n          setExperience((expValue % 100).toString());\n          setLevel(Math.floor(expValue / 100).toString());\n          var heartValue = [];\n\n          for (var i = 0; i < data.heart; i++) {\n            heartValue.push(i);\n          }\n\n          setHearts(heartValue);\n          setDisplayed(true);\n          setRefreshing(false);\n          changeRefreshing(false);\n        }, 1000);\n      });\n    }).catch();\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles(colors).headContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, React.createElement(MenuHeader, {\n    text: \"\",\n    navigation: props.navigation,\n    hp: hearts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles(colors).verticalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).creature,\n    source: require(\"../resources/animations/Egg.gif\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), React.createElement(ExperienceBar, {\n    level: level,\n    exp: experience,\n    width: experience + '%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  })), React.createElement(SafeAreaView, {\n    style: styles(colors).scrollViewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }\n  }, React.createElement(Animated.ScrollView, {\n    showsVerticalScrollIndicator: false,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrolling\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    scrollEventThrottle: 16,\n    decelerationRate: 'normal',\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: getRefreshing,\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, habits.map(function (data, index) {\n    if (data.times - data.todo > 0) {\n      var scale = scrolling.interpolate({\n        inputRange: [-1, 0, 100 * index, 100 * (index + 1)],\n        outputRange: [1, 1, 1, 0]\n      });\n      var opacity = scrolling.interpolate({\n        inputRange: [-1, 0, 100 * index, 100 * (index + 0.8)],\n        outputRange: [1, 1, 1, 0]\n      });\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 10\n        }\n      }, React.createElement(Habits, {\n        enableRight: true,\n        navigation: props.navigation,\n        habitId: data._id,\n        name: data.title,\n        streak: 1,\n        frequency: data.times - data.todo,\n        habitId: data._id,\n        userHabitId: userHabitId,\n        exp: experience,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          height: 15\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      })));\n    }\n  }))));\n}\n\nexport default HabitsScreen;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/Habits.js"],"names":["React","useState","useEffect","useContext","styles","Habits","MenuHeader","ExperienceBar","useTheme","AuthContext","HabitsScreen","props","habits","setHabits","hearts","setHearts","userHabitId","setUserHabitId","experience","setExperience","colors","level","setLevel","displayed","setDisplayed","scrolling","useRef","Animated","Value","current","getToken","getRefreshing","changeRefreshing","refreshing","setRefreshing","onRefresh","useCallback","displayHabits","length","date","Date","getDay","fetch","method","headers","then","res","json","data","expValue","parseInt","setTimeout","habitList","_id","toString","Math","floor","heartValue","i","heart","push","catch","headContainer","navigation","verticalContainer","creature","require","scrollViewContainer","event","nativeEvent","contentOffset","y","useNativeDriver","map","index","times","todo","scale","interpolate","inputRange","outputRange","opacity","transform","title","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;;;;;AASA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,aAAP;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,SAASC,WAAT;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC5B,kBAA4BV,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA4BZ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAsCd,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOe,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAoChB,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOiB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,kBAAmBX,QAAQ,EAA3B;AAAA,MAAQY,MAAR,aAAQA,MAAR;;AAEA,mBAA0BnB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOoB,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAkCrB,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOsB,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,SAAS,GAAGzB,KAAK,CAAC0B,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAAtD;;AAEA,oBAAsD1B,UAAU,CAACM,WAAD,CAAhE;AAAA,MAAQqB,QAAR,eAAQA,QAAR;AAAA,MAAkBC,aAAlB,eAAkBA,aAAlB;AAAA,MAAiCC,gBAAjC,eAAiCA,gBAAjC;;AAEA,wBAAoChC,KAAK,CAACC,QAAN,CAAe,KAAf,CAApC;AAAA;AAAA,MAAOgC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,SAAS,GAAGnC,KAAK,CAACoC,WAAN,CAAkB,YAAM;AACzCF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAK,IAAAA,aAAa;AACb,GAJiB,EAIf,EAJe,CAAlB;AAMAnC,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIU,MAAM,CAAC0B,MAAP,IAAiB,CAAjB,IAAsB,CAACf,SAA3B,EAAsCc,aAAa;AACnD,GAFQ,CAAT;AAIAnC,EAAAA,SAAS,CAAC,YAAM;AACf,QAAI6B,aAAJ,EAAmBM,aAAa;AAChC,GAFQ,EAEN,CAACN,aAAD,CAFM,CAAT;;AAIA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC3Bb,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAMK,IAAI,GAAG,IAAIC,IAAJ,GAAWC,MAAX,EAAb;AACAC,IAAAA,KAAK,CAAC,4DAA4DH,IAA7D,EAAmE;AACvEI,MAAAA,MAAM,EAAE,KAD+D;AAEvEC,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAER,gCAAwBd;AAFhB;AAF8D,KAAnE,CAAL,CAOEe,IAPF,CAOO,UAACC,GAAD;AAAA,aACLA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgB,UAACG,IAAD,EAAU;AACzB,YAAMC,QAAQ,GAAGC,QAAQ,CAACF,IAAI,CAACC,QAAN,CAAzB;AACAE,QAAAA,UAAU,CAAC,YAAM;AAChBtC,UAAAA,SAAS,CAACmC,IAAI,CAACI,SAAN,CAAT;AACAnC,UAAAA,cAAc,CAAC+B,IAAI,CAACK,GAAN,CAAd;AACAlC,UAAAA,aAAa,CAAC,CAAC8B,QAAQ,GAAG,GAAZ,EAAiBK,QAAjB,EAAD,CAAb;AACAhC,UAAAA,QAAQ,CAACiC,IAAI,CAACC,KAAL,CAAWP,QAAQ,GAAG,GAAtB,EAA2BK,QAA3B,EAAD,CAAR;AAEA,cAAMG,UAAU,GAAG,EAAnB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACW,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACpCD,YAAAA,UAAU,CAACG,IAAX,CAAgBF,CAAhB;AACA;;AACD3C,UAAAA,SAAS,CAAC0C,UAAD,CAAT;AACAjC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,SAdS,EAcP,IAdO,CAAV;AAeA,OAjBD,CADK;AAAA,KAPP,EA2BE6B,KA3BF;AA4BA,GAhCD;;AAkCA,SACC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEzD,MAAM,CAACgB,MAAD,CAAN,CAAe0C,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,EAAjB;AAAoB,IAAA,UAAU,EAAEnD,KAAK,CAACoD,UAAtC;AAAkD,IAAA,EAAE,EAAEjD,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACgB,MAAD,CAAN,CAAe4C,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAE5D,MAAM,CAACgB,MAAD,CAAN,CAAe6C,QADvB;AAEC,IAAA,MAAM,EAAEC,OAAO,mCAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKC,oBAAC,aAAD;AACC,IAAA,KAAK,EAAE7C,KADR;AAEC,IAAA,GAAG,EAAEH,UAFN;AAGC,IAAA,KAAK,EAAEA,UAAU,GAAG,GAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CAFD,EAaC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEd,MAAM,CAACgB,MAAD,CAAN,CAAe+C,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD,CAAU,UAAV;AACC,IAAA,4BAA4B,EAAE,KAD/B;AAEC,IAAA,QAAQ,EAAExC,QAAQ,CAACyC,KAAT,CACT,CAAC;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA,CAAC,EAAE9C;AAAL;AAAjB;AAAf,KAAD,CADS,EAET;AAAE+C,MAAAA,eAAe,EAAE;AAAnB,KAFS,CAFX;AAMC,IAAA,mBAAmB,EAAE,EANtB;AAOC,IAAA,gBAAgB,EAAE,QAPnB;AAQC,IAAA,cAAc,EACb,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAEzC,aAA5B;AAA2C,MAAA,SAAS,EAAEI,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYEvB,MAAM,CAAC6D,GAAP,CAAW,UAACzB,IAAD,EAAO0B,KAAP,EAAiB;AAC5B,QAAI1B,IAAI,CAAC2B,KAAL,GAAa3B,IAAI,CAAC4B,IAAlB,GAAyB,CAA7B,EAAgC;AAC/B,UAAMC,KAAK,GAAGpD,SAAS,CAACqD,WAAV,CAAsB;AACnCC,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,MAAML,KAAd,EAAqB,OAAOA,KAAK,GAAG,CAAf,CAArB,CADuB;AAEnCM,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAFsB,OAAtB,CAAd;AAKA,UAAMC,OAAO,GAAGxD,SAAS,CAACqD,WAAV,CAAsB;AACrCC,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,MAAML,KAAd,EAAqB,OAAOA,KAAK,GAAG,GAAf,CAArB,CADyB;AAErCM,QAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAFwB,OAAtB,CAAhB;AAKA,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAPA,OAAF;AAAWC,UAAAA,SAAS,EAAE,CAAC;AAAEL,YAAAA,KAAK,EAALA;AAAF,WAAD;AAAtB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,WAAW,EAAE,IADd;AAEC,QAAA,UAAU,EAAElE,KAAK,CAACoD,UAFnB;AAGC,QAAA,OAAO,EAAEf,IAAI,CAACK,GAHf;AAIC,QAAA,IAAI,EAAEL,IAAI,CAACmC,KAJZ;AAKC,QAAA,MAAM,EAAE,CALT;AAMC,QAAA,SAAS,EAAEnC,IAAI,CAAC2B,KAAL,GAAa3B,IAAI,CAAC4B,IAN9B;AAOC,QAAA,OAAO,EAAE5B,IAAI,CAACK,GAPf;AAQC,QAAA,WAAW,EAAErC,WARd;AASC,QAAA,GAAG,EAAEE,UATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAYC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEkE,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZD,CADD,CADD;AAkBA;AACD,GA/BA,CAZF,CADD,CAbD,CADD;AA+DA;;AAED,eAAe1E,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tView,\r\n\tImage,\r\n\tAnimated,\r\n\tSafeAreaView,\r\n\tRefreshControl,\r\n} from 'react-native';\r\n\r\nimport styles from '../styling/HabitsScreen';\r\nimport Habits from '../components/Habits';\r\nimport MenuHeader from '../components/MenuHeader';\r\n\r\nimport ExperienceBar from '../components/ExperienceBar';\r\n\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nimport { AuthContext } from '../Context';\r\n\r\nfunction HabitsScreen(props) {\r\n\tconst [habits, setHabits] = useState([]);\r\n\tconst [hearts, setHearts] = useState([]);\r\n\tconst [userHabitId, setUserHabitId] = useState('');\r\n\tconst [experience, setExperience] = useState('');\r\n\tconst { colors } = useTheme();\r\n\r\n\tconst [level, setLevel] = useState('');\r\n\tconst [displayed, setDisplayed] = useState(false);\r\n\r\n\tconst scrolling = React.useRef(new Animated.Value(0)).current;\r\n\r\n\tconst { getToken, getRefreshing, changeRefreshing } = useContext(AuthContext);\r\n\r\n\tconst [refreshing, setRefreshing] = React.useState(false);\r\n\r\n\tconst onRefresh = React.useCallback(() => {\r\n\t\tsetRefreshing(true);\r\n\t\tchangeRefreshing(true);\r\n\t\tdisplayHabits();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (habits.length == 0 && !displayed) displayHabits();\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (getRefreshing) displayHabits();\r\n\t}, [getRefreshing]);\r\n\r\n\tconst displayHabits = () => {\r\n\t\tsetDisplayed(true);\r\n\t\tsetRefreshing(true);\r\n\t\tconst date = new Date().getDay();\r\n\t\tfetch('http://localhost:5000/api/v1.0.0/habit/show_user_habit/' + date, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'authentication-token': getToken,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\tconst expValue = parseInt(data.expValue);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetHabits(data.habitList);\r\n\t\t\t\t\t\tsetUserHabitId(data._id);\r\n\t\t\t\t\t\tsetExperience((expValue % 100).toString());\r\n\t\t\t\t\t\tsetLevel(Math.floor(expValue / 100).toString());\r\n\t\t\t\t\t\t//Displaying purposes TODO\r\n\t\t\t\t\t\tconst heartValue = [];\r\n\t\t\t\t\t\tfor (var i = 0; i < data.heart; i++) {\r\n\t\t\t\t\t\t\theartValue.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetHearts(heartValue);\r\n\t\t\t\t\t\tsetDisplayed(true);\r\n\t\t\t\t\t\tsetRefreshing(false);\r\n\t\t\t\t\t\tchangeRefreshing(false);\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t}),\r\n\t\t\t)\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles(colors).headContainer}>\r\n\t\t\t<MenuHeader text='' navigation={props.navigation} hp={hearts} />\r\n\t\t\t<View style={styles(colors).verticalContainer}>\r\n\t\t\t\t<Image\r\n\t\t\t\t\tstyle={styles(colors).creature}\r\n\t\t\t\t\tsource={require('../resources/animations/Egg.gif')}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExperienceBar\r\n\t\t\t\t\tlevel={level}\r\n\t\t\t\t\texp={experience}\r\n\t\t\t\t\twidth={experience + '%'}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<SafeAreaView style={styles(colors).scrollViewContainer}>\r\n\t\t\t\t<Animated.ScrollView\r\n\t\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\t\tonScroll={Animated.event(\r\n\t\t\t\t\t\t[{ nativeEvent: { contentOffset: { y: scrolling } } }],\r\n\t\t\t\t\t\t{ useNativeDriver: true },\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tscrollEventThrottle={16}\r\n\t\t\t\t\tdecelerationRate={'normal'}\r\n\t\t\t\t\trefreshControl={\r\n\t\t\t\t\t\t<RefreshControl refreshing={getRefreshing} onRefresh={onRefresh} />\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{habits.map((data, index) => {\r\n\t\t\t\t\t\tif (data.times - data.todo > 0) {\r\n\t\t\t\t\t\t\tconst scale = scrolling.interpolate({\r\n\t\t\t\t\t\t\t\tinputRange: [-1, 0, 100 * index, 100 * (index + 1)],\r\n\t\t\t\t\t\t\t\toutputRange: [1, 1, 1, 0],\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tconst opacity = scrolling.interpolate({\r\n\t\t\t\t\t\t\t\tinputRange: [-1, 0, 100 * index, 100 * (index + 0.8)],\r\n\t\t\t\t\t\t\t\toutputRange: [1, 1, 1, 0],\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t\t\t<Animated.View style={{ opacity, transform: [{ scale }] }}>\r\n\t\t\t\t\t\t\t\t\t\t<Habits\r\n\t\t\t\t\t\t\t\t\t\t\tenableRight={true}\r\n\t\t\t\t\t\t\t\t\t\t\tnavigation={props.navigation}\r\n\t\t\t\t\t\t\t\t\t\t\thabitId={data._id}\r\n\t\t\t\t\t\t\t\t\t\t\tname={data.title}\r\n\t\t\t\t\t\t\t\t\t\t\tstreak={1}\r\n\t\t\t\t\t\t\t\t\t\t\tfrequency={data.times - data.todo}\r\n\t\t\t\t\t\t\t\t\t\t\thabitId={data._id}\r\n\t\t\t\t\t\t\t\t\t\t\tuserHabitId={userHabitId}\r\n\t\t\t\t\t\t\t\t\t\t\texp={experience}\r\n\t\t\t\t\t\t\t\t\t\t></Habits>\r\n\t\t\t\t\t\t\t\t\t\t<View style={{ height: 15 }}></View>\r\n\t\t\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Animated.ScrollView>\r\n\t\t\t</SafeAreaView>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nexport default HabitsScreen;\r\n"]},"metadata":{},"sourceType":"module"}
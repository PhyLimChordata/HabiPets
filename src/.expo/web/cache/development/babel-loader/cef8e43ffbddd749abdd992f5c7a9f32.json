{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\Settings.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useContext } from 'react';\nimport settingStyles from \"../styling/Settings\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useTheme } from '@react-navigation/native';\nimport Colours from \"../resources/themes/Colours\";\nimport MenuHeader from \"../components/MenuHeader\";\nimport TextBox from \"../components/TextBox\";\nimport { AuthContext } from \"../Context\";\n\nfunction SettingsPage(props) {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      notif = _React$useState4[0],\n      setNotif = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      emailNotif = _React$useState6[0],\n      setEmailNotif = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      voiceNotif = _React$useState8[0],\n      setVoiceNotif = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      reminder = _React$useState10[0],\n      setReminder = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      vibration = _React$useState12[0],\n      setVibration = _React$useState12[1];\n\n  var _React$useState13 = React.useState('13'),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      fontSize = _React$useState14[0],\n      setFontSize = _React$useState14[1];\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken;\n\n  useEffect(function () {\n    var get = function get() {\n      fetch('http://localhost:5000/api/v1.0.0/setting/getUserSetting', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'authentication-token': getToken\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        setNotif(data.pushNotification);\n        setEmailNotif(data.emailNotification);\n        setVoiceNotif(data.voiceNotification);\n        setReminder(data.reminder);\n        setVibration(data.vibration);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    if (!loaded) {\n      get();\n      setLoaded(true);\n    }\n  }, []);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var styles = settingStyles(colors, Dimensions.get('screen').width, Dimensions.get('screen').height);\n\n  var OneSetting = function OneSetting(props) {\n    var _useTheme2 = useTheme(),\n        colors = _useTheme2.colors;\n\n    function update(value) {\n      return _regeneratorRuntime.async(function update$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('value = ' + value);\n              props.handle(value);\n              console.log('notif: ' + notif);\n              console.log('emailnotif = ' + emailNotif);\n              console.log('voiceNotif = ' + voiceNotif);\n              console.log('reminder = ' + reminder);\n              console.log('vibration = ' + vibration);\n              return _context.abrupt(\"return\");\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    var thumbColor = Colours.Grey.Button;\n    return React.createElement(View, {\n      style: props.styles.oneSettingContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: [props.styles.text, props.styles.textNormal, {\n        flex: 1,\n        paddingLeft: '7%'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }, props.tag), React.createElement(Switch, {\n      style: props.styles.switchStyling,\n      trackColor: {\n        false: colors.Quaternary,\n        true: colors.Tertiary\n      },\n      thumbColor: thumbColor,\n      activeThumbColor: thumbColor,\n      value: props.enabled,\n      onValueChange: function onValueChange(val) {\n        console.log(props.handle);\n        console.log('Previous value for ' + props.tag + ' = ' + props.enabled);\n        console.log('Received value for ' + props.tag + ' = ' + val);\n        props.handle(val, fetch('http://localhost:5000/api/v1.0.0/setting/updateUserSetting', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'authentication-token': getToken\n          },\n          body: JSON.stringify(_defineProperty({}, props.id, val))\n        }).then(function (res) {\n          console.log('Updating settings: ' + res.status);\n          res.json().then(function (data) {\n            console.log(data);\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 3\n    }\n  }, React.createElement(MenuHeader, {\n    back: true,\n    text: 'Settings',\n    navigation: props.navigation,\n    right: React.createElement(React.Fragment, null, React.createElement(ImageBackground, {\n      style: {\n        width: Dimensions.get('screen').width * 0.1,\n        height: Dimensions.get('screen').width * 0.1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      source: require(\"../resources/images/Background.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: Dimensions.get('screen').width * 0.08,\n        height: Dimensions.get('screen').width * 0.08,\n        margin: Dimensions.get('screen').width * 0.02\n      },\n      source: require(\"../resources/images/SettingIcon.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 8\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: [styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.settingContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.textTitle, styles.text, {\n      marginBottom: '3%'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 6\n    }\n  }, \"Notifications\"), React.createElement(OneSetting, {\n    id: \"pushNotification\",\n    tag: \"Use Push Notifications\",\n    enabled: notif,\n    handle: setNotif,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 6\n    }\n  }), React.createElement(OneSetting, {\n    id: \"emailNotification\",\n    tag: \"Use Email Notifications\",\n    enabled: emailNotif,\n    handle: setEmailNotif,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 6\n    }\n  }), React.createElement(OneSetting, {\n    id: \"voiceNotification\",\n    tag: \"Use Voice Notifications\",\n    enabled: voiceNotif,\n    handle: setVoiceNotif,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 6\n    }\n  }), React.createElement(OneSetting, {\n    id: \"reminder\",\n    tag: \"Set Daily Reminder\",\n    enabled: reminder,\n    handle: setReminder,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 6\n    }\n  }), React.createElement(OneSetting, {\n    id: \"vibration\",\n    tag: \"Vibration\",\n    enabled: vibration,\n    handle: setVibration,\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: [styles.textTitle, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 6\n    }\n  }, \"App version\"), React.createElement(View, {\n    style: styles.textDisplayMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: [styles.textNormal, styles.textDisplay],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, \"1.0.0\")), React.createElement(TextBox, {\n    header: \"Font size\",\n    TextStyle: [styles.textTitle, styles.text],\n    boxStyle: [styles.textNormal, styles.textDisplay, styles.textDisplayMargin],\n    text: fontSize,\n    value: fontSize,\n    setText: setFontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 6\n    }\n  }), React.createElement(Text, {\n    style: [styles.textTitle, styles.text],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 6\n    }\n  }, \"Screen on Launch\"), React.createElement(View, {\n    style: styles.textDisplayMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: [styles.textNormal, styles.textDisplay],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, \"Habits\")))));\n}\n\nexport default SettingsPage;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/Settings.js"],"names":["React","useEffect","useContext","settingStyles","useTheme","Colours","MenuHeader","TextBox","AuthContext","SettingsPage","props","useState","loaded","setLoaded","notif","setNotif","emailNotif","setEmailNotif","voiceNotif","setVoiceNotif","reminder","setReminder","vibration","setVibration","fontSize","setFontSize","getToken","get","fetch","method","headers","then","res","json","data","pushNotification","emailNotification","voiceNotification","catch","err","console","log","colors","styles","Dimensions","width","height","OneSetting","update","value","handle","thumbColor","Grey","Button","oneSettingContainer","text","textNormal","flex","paddingLeft","tag","switchStyling","false","Quaternary","true","Tertiary","enabled","val","body","JSON","stringify","id","status","navigation","alignItems","justifyContent","require","margin","container","settingContainer","textTitle","marginBottom","textDisplayMargin","textDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport settingStyles from '../styling/Settings';\r\nimport {\r\n\tView,\r\n\tSwitch,\r\n\tText,\r\n\tDimensions,\r\n\tSafeAreaView,\r\n\tImage,\r\n\tImageBackground,\r\n} from 'react-native';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport Colours from '../resources/themes/Colours';\r\nimport MenuHeader from '../components/MenuHeader';\r\nimport TextBox from '../components/TextBox';\r\n\r\nimport { AuthContext } from '../Context';\r\n\r\n// setting data from database\r\n\r\nfunction SettingsPage(props) {\r\n\tconst [loaded, setLoaded] = React.useState(false);\r\n\tconst [notif, setNotif] = React.useState(true);\r\n\tconst [emailNotif, setEmailNotif] = React.useState(true);\r\n\tconst [voiceNotif, setVoiceNotif] = React.useState(false);\r\n\tconst [reminder, setReminder] = React.useState(true);\r\n\tconst [vibration, setVibration] = React.useState(false);\r\n\tconst [fontSize, setFontSize] = React.useState('13');\r\n\tconst { getToken } = useContext(AuthContext);\r\n\tuseEffect(() => {\r\n\t\tconst get = () => {\r\n\t\t\tfetch('http://localhost:5000/api/v1.0.0/setting/getUserSetting', {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'authentication-token': getToken,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => res.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tsetNotif(data.pushNotification);\r\n\t\t\t\t\tsetEmailNotif(data.emailNotification);\r\n\t\t\t\t\tsetVoiceNotif(data.voiceNotification);\r\n\t\t\t\t\tsetReminder(data.reminder);\r\n\t\t\t\t\tsetVibration(data.vibration);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => console.log(err));\r\n\t\t};\r\n\r\n\t\tif (!loaded) {\r\n\t\t\tget();\r\n\t\t\tsetLoaded(true);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst { colors } = useTheme();\r\n\r\n\tlet styles = settingStyles(\r\n\t\tcolors,\r\n\t\tDimensions.get('screen').width,\r\n\t\tDimensions.get('screen').height,\r\n\t);\r\n\r\n\tconst OneSetting = (props) => {\r\n\t\tconst { colors } = useTheme();\r\n\r\n\t\tasync function update(value) {\r\n\t\t\tconsole.log('value = ' + value);\r\n\t\t\tprops.handle(value);\r\n\t\t\tconsole.log('notif: ' + notif);\r\n\t\t\tconsole.log('emailnotif = ' + emailNotif);\r\n\t\t\tconsole.log('voiceNotif = ' + voiceNotif);\r\n\t\t\tconsole.log('reminder = ' + reminder);\r\n\t\t\tconsole.log('vibration = ' + vibration);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst thumbColor = Colours.Grey.Button;\r\n\t\treturn (\r\n\t\t\t<View style={props.styles.oneSettingContainer}>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tprops.styles.text,\r\n\t\t\t\t\t\tprops.styles.textNormal,\r\n\t\t\t\t\t\t{ flex: 1, paddingLeft: '7%' },\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.tag}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Switch\r\n\t\t\t\t\tstyle={props.styles.switchStyling}\r\n\t\t\t\t\ttrackColor={{\r\n\t\t\t\t\t\tfalse: colors.Quaternary,\r\n\t\t\t\t\t\ttrue: colors.Tertiary,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tthumbColor={thumbColor}\r\n\t\t\t\t\tactiveThumbColor={thumbColor}\r\n\t\t\t\t\tvalue={props.enabled}\r\n\t\t\t\t\tonValueChange={(val) => {\r\n\t\t\t\t\t\tconsole.log(props.handle);\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t'Previous value for ' + props.tag + ' = ' + props.enabled,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconsole.log('Received value for ' + props.tag + ' = ' + val);\r\n\t\t\t\t\t\tprops.handle(\r\n\t\t\t\t\t\t\tval,\r\n\t\t\t\t\t\t\tfetch(\r\n\t\t\t\t\t\t\t\t'http://localhost:5000/api/v1.0.0/setting/updateUserSetting',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\t\t\t\t'authentication-token': getToken,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t[props.id]: val,\r\n\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t).then((res) => {\r\n\t\t\t\t\t\t\t\tconsole.log('Updating settings: ' + res.status);\r\n\t\t\t\t\t\t\t\tres\r\n\t\t\t\t\t\t\t\t\t.json()\r\n\t\t\t\t\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch((err) => console.log(err));\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SafeAreaView>\r\n\t\t\t<MenuHeader\r\n\t\t\t\tback={true}\r\n\t\t\t\ttext={'Settings'}\r\n\t\t\t\tnavigation={props.navigation}\r\n\t\t\t\tright={\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ImageBackground\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: Dimensions.get('screen').width * 0.1,\r\n\t\t\t\t\t\t\t\theight: Dimensions.get('screen').width * 0.1,\r\n\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsource={require('../resources/images/Background.png')}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: Dimensions.get('screen').width * 0.08,\r\n\t\t\t\t\t\t\t\t\theight: Dimensions.get('screen').width * 0.08,\r\n\t\t\t\t\t\t\t\t\tmargin: Dimensions.get('screen').width * 0.02,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsource={require('../resources/images/SettingIcon.png')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ImageBackground>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t\t<View style={[styles.container]}>\r\n\t\t\t\t<View style={styles.settingContainer}>\r\n\t\t\t\t\t<Text style={[styles.textTitle, styles.text, { marginBottom: '3%' }]}>\r\n\t\t\t\t\t\tNotifications\r\n\t\t\t\t\t</Text>\r\n\t\t\t\t\t<OneSetting\r\n\t\t\t\t\t\tid='pushNotification'\r\n\t\t\t\t\t\ttag='Use Push Notifications'\r\n\t\t\t\t\t\tenabled={notif}\r\n\t\t\t\t\t\thandle={setNotif}\r\n\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OneSetting\r\n\t\t\t\t\t\tid='emailNotification'\r\n\t\t\t\t\t\ttag='Use Email Notifications'\r\n\t\t\t\t\t\tenabled={emailNotif}\r\n\t\t\t\t\t\thandle={setEmailNotif}\r\n\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OneSetting\r\n\t\t\t\t\t\tid='voiceNotification'\r\n\t\t\t\t\t\ttag='Use Voice Notifications'\r\n\t\t\t\t\t\tenabled={voiceNotif}\r\n\t\t\t\t\t\thandle={setVoiceNotif}\r\n\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OneSetting\r\n\t\t\t\t\t\tid='reminder'\r\n\t\t\t\t\t\ttag='Set Daily Reminder'\r\n\t\t\t\t\t\tenabled={reminder}\r\n\t\t\t\t\t\thandle={setReminder}\r\n\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<OneSetting\r\n\t\t\t\t\t\tid='vibration'\r\n\t\t\t\t\t\ttag='Vibration'\r\n\t\t\t\t\t\tenabled={vibration}\r\n\t\t\t\t\t\thandle={setVibration}\r\n\t\t\t\t\t\tstyles={styles}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Text style={[styles.textTitle, styles.text]}>App version</Text>\r\n\t\t\t\t\t<View style={styles.textDisplayMargin}>\r\n\t\t\t\t\t\t<Text style={[styles.textNormal, styles.textDisplay]}>1.0.0</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t\t<TextBox\r\n\t\t\t\t\t\theader='Font size'\r\n\t\t\t\t\t\tTextStyle={[styles.textTitle, styles.text]}\r\n\t\t\t\t\t\tboxStyle={[\r\n\t\t\t\t\t\t\tstyles.textNormal,\r\n\t\t\t\t\t\t\tstyles.textDisplay,\r\n\t\t\t\t\t\t\tstyles.textDisplayMargin,\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\ttext={fontSize}\r\n\t\t\t\t\t\tvalue={fontSize}\r\n\t\t\t\t\t\tsetText={setFontSize}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Text style={[styles.textTitle, styles.text]}>Screen on Launch</Text>\r\n\t\t\t\t\t<View style={styles.textDisplayMargin}>\r\n\t\t\t\t\t\t<Text style={[styles.textNormal, styles.textDisplay]}>Habits</Text>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}\r\n\r\nexport default SettingsPage;\r\n"]},"metadata":{},"sourceType":"module"}
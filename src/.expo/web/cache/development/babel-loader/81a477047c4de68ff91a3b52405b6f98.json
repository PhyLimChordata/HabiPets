{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\components\\\\Popup.js\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from 'react-native-modal';\nimport { useTheme } from '@react-navigation/native';\nimport { AuthContext } from \"../Context\";\nimport styles from \"../styling/Popup\";\n\nfunction Popup(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var style = styles(colors);\n  var hasButton = props.button;\n  var button = React.createElement(View, {\n    style: style.popupButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: style.popupButton,\n    onPress: function onPress() {\n      props.setModalVisible(false);\n      signOut();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: style.popupButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Yes\")), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: style.popupButton,\n    onPress: function onPress() {\n      props.setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: style.popupButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"No\")));\n\n  var _useContext = useContext(AuthContext),\n      signOut = _useContext.signOut;\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, React.createElement(Modal, {\n    isVisible: props.modalVisible,\n    onBackdropPress: function onBackdropPress() {\n      return props.setModalVisible(false);\n    },\n    onSwipeComplete: function onSwipeComplete(e) {\n      props.setModalVisible(false);\n    },\n    useNativeDriverForBackdrop: true,\n    swipeDirection: ['down'],\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, React.createElement(Image, {\n    style: style.popupImage,\n    source: props.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: style.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, props.title), React.createElement(Text, {\n    style: [style.text, {\n      textAlign: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, props.text), hasButton && button))));\n}\n\nexport default Popup;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/components/Popup.js"],"names":["React","useContext","Modal","useTheme","AuthContext","styles","Popup","props","colors","style","hasButton","button","popupButtonContainer","popupButton","setModalVisible","signOut","popupButtonText","modalVisible","e","justifyContent","alignItems","container","popupImage","image","title","text","textAlign"],"mappings":"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","sourcesContent":["\r\nimport React, { useContext } from 'react';\r\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { useTheme } from '@react-navigation/native';\r\nimport { AuthContext } from '../Context';\r\n\r\nimport styles from '../styling/Popup';\r\n\r\nfunction Popup(props) {\r\n\tconst { colors } = useTheme();\r\n\tconst style = styles(colors);\r\n\tconst hasButton = props.button;\r\n\tlet button = (\r\n\t\t<View style={style.popupButtonContainer}>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={style.popupButton}\r\n\t\t\t\tonPress={() => {\r\n\t\t\t\t\tprops.setModalVisible(false);\r\n\t\t\t\t\tsignOut();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text style={style.popupButtonText}>Yes</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={style.popupButton}\r\n\t\t\t\tonPress={() => {\r\n\t\t\t\t\tprops.setModalVisible(false);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Text style={style.popupButtonText}>No</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>);\r\n\tconst { signOut } = useContext(AuthContext);\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t<Modal\r\n\t\t\t\tisVisible={props.modalVisible}\r\n\t\t\t\tonBackdropPress={() => props.setModalVisible(false)}\r\n\t\t\t\tonSwipeComplete={(e) => {\r\n\t\t\t\t\tprops.setModalVisible(false);\r\n\t\t\t\t}}\r\n\t\t\t\tuseNativeDriverForBackdrop\r\n\t\t\t\tswipeDirection={['down']}\r\n\t\t\t\tstyle={{ justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t\t<View style={style.container}>\r\n\t\t\t\t\t<View style={props.style}>\r\n\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\tstyle={style.popupImage}\r\n\t\t\t\t\t\t\tsource={props.image}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text style={style.title}>{props.title}</Text>\r\n\t\t\t\t\t\t<Text style={[style.text, {textAlign: 'center'}]}>{props.text}</Text>\r\n\t\t\t\t\t\t{hasButton && button}\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t</Modal>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default Popup;\r\n"]},"metadata":{},"sourceType":"module"}
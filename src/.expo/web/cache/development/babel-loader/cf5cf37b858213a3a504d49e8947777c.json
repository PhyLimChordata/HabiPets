{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\components\\\\TextBox.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport styles from \"../styling/Authentication\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction TextBox(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var containerStyle = props.containerStyle,\n      _props$boxStyle = props.boxStyle,\n      boxStyle = _props$boxStyle === void 0 ? styles(colors).authenticationInput : _props$boxStyle,\n      _props$TextStyle = props.TextStyle,\n      TextStyle = _props$TextStyle === void 0 ? styles(colors).authenticationText : _props$TextStyle,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline;\n\n  var _useState = useState(props.text),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return React.createElement(View, {\n    style: containerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: TextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, props.header), React.createElement(TextInput, {\n    onTouchStart: props.onPress,\n    multiline: multiline,\n    style: boxStyle,\n    value: text,\n    onChangeText: function onChangeText(content) {\n      return setText(content);\n    },\n    onEndEditing: function onEndEditing() {\n      return props.setText(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default TextBox;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/components/TextBox.js"],"names":["React","useState","styles","useTheme","TextBox","props","colors","containerStyle","boxStyle","authenticationInput","TextStyle","authenticationText","multiline","text","setText","header","onPress","content"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP;AAEA,SAASC,QAAT,QAAyB,0BAAzB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACvB,kBAAmBF,QAAQ,EAA3B;AAAA,MAAQG,MAAR,aAAQA,MAAR;;AACA,MACCC,cADD,GAKIF,KALJ,CACCE,cADD;AAAA,wBAKIF,KALJ,CAECG,QAFD;AAAA,MAECA,QAFD,gCAEYN,MAAM,CAACI,MAAD,CAAN,CAAeG,mBAF3B;AAAA,yBAKIJ,KALJ,CAGCK,SAHD;AAAA,MAGCA,SAHD,iCAGaR,MAAM,CAACI,MAAD,CAAN,CAAeK,kBAH5B;AAAA,yBAKIN,KALJ,CAICO,SAJD;AAAA,MAICA,SAJD,iCAIa,KAJb;;AAMA,kBAAwBX,QAAQ,CAACI,KAAK,CAACQ,IAAP,CAAhC;AAAA;AAAA,MAAOA,IAAP;AAAA,MAAaC,OAAb;;AAEA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBL,KAAK,CAACU,MAA/B,CADD,EAEC,oBAAC,SAAD;AACC,IAAA,YAAY,EAAEV,KAAK,CAACW,OADrB;AAEC,IAAA,SAAS,EAAEJ,SAFZ;AAGC,IAAA,KAAK,EAAEJ,QAHR;AAIC,IAAA,KAAK,EAAEK,IAJR;AAKC,IAAA,YAAY,EAAE,sBAACI,OAAD;AAAA,aAAaH,OAAO,CAACG,OAAD,CAApB;AAAA,KALf;AAMC,IAAA,YAAY,EAAE;AAAA,aAAMZ,KAAK,CAACS,OAAN,CAAcD,IAAd,CAAN;AAAA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAaA;;AAED,eAAeT,OAAf","sourcesContent":["import { Text, TextInput, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nimport styles from '../styling/Authentication';\r\n\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction TextBox(props) {\r\n\tconst { colors } = useTheme();\r\n\tconst {\r\n\t\tcontainerStyle,\r\n\t\tboxStyle = styles(colors).authenticationInput,\r\n\t\tTextStyle = styles(colors).authenticationText,\r\n\t\tmultiline = false,\r\n\t} = props;\r\n\tconst [text, setText] = useState(props.text);\r\n\r\n\treturn (\r\n\t\t<View style={containerStyle}>\r\n\t\t\t<Text style={TextStyle}>{props.header}</Text>\r\n\t\t\t<TextInput\r\n\t\t\t\tonTouchStart={props.onPress}\r\n\t\t\t\tmultiline={multiline}\r\n\t\t\t\tstyle={boxStyle}\r\n\t\t\t\tvalue={text}\r\n\t\t\t\tonChangeText={(content) => setText(content)}\r\n\t\t\t\tonEndEditing={() => props.setText(text)}\r\n\t\t\t></TextInput>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default TextBox;\r\n"]},"metadata":{},"sourceType":"module"}
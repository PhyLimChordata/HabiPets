{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\screens\\\\VerifyEmailPassword.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styling/Authentication\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction VerifyEmailPassword(props) {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var resend = function resend() {\n    fetch('http://localhost:5000/api/v1.0.0/user/pending_password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        newPassword: props.route.params.password,\n        email: props.route.params.email\n      })\n    }).then(function (res) {\n      if (res.status == 200) {\n        res.json().then(function (data) {\n          console.log(data);\n        });\n      }\n    }).catch();\n  };\n\n  return React.createElement(View, {\n    style: styles(colors).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles(colors).authenticationLogo,\n    source: require(\"../resources/images/Email.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles(colors).header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).textTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Resetting your Password\"), React.createElement(Text, {\n    style: styles(colors).explanationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, ' ', \"An email has been sent which will contain a link to reset your password.\", ' ')), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: styles(colors).authenticationButton,\n    onPress: function onPress() {\n      return resend();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Resend Email\")), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.6,\n    style: styles(colors).authenticationSpecialButton,\n    onPress: function onPress() {\n      return props.navigation.push('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: styles(colors).authenticationButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Back to Login\")));\n}\n\nexport default VerifyEmailPassword;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/screens/VerifyEmailPassword.js"],"names":["React","useState","useContext","styles","useTheme","VerifyEmailPassword","props","colors","resend","fetch","method","headers","body","JSON","stringify","newPassword","route","params","password","email","then","res","status","json","data","console","log","catch","container","authenticationLogo","require","header","textTitle","explanationText","authenticationButton","authenticationButtonText","authenticationSpecialButton","navigation","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport { View, Text, TextInput, Image, TouchableOpacity } from 'react-native';\r\n\r\nimport styles from '../styling/Authentication';\r\n\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction VerifyEmailPassword(props) {\r\n\tconst { colors } = useTheme();\r\n\r\n\tconst resend = () => {\r\n\t\tfetch('http://localhost:5000/api/v1.0.0/user/pending_password', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tnewPassword: props.route.params.password,\r\n\t\t\t\temail: props.route.params.email,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status == 200) {\r\n\t\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles(colors).container}>\r\n\t\t\t<Image\r\n\t\t\t\tstyle={styles(colors).authenticationLogo}\r\n\t\t\t\tsource={require('../resources/images/Email.png')}\r\n\t\t\t/>\r\n\t\t\t<View style={styles(colors).header}>\r\n\t\t\t\t<Text style={styles(colors).textTitle}>Resetting your Password</Text>\r\n\t\t\t\t<Text style={styles(colors).explanationText}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tAn email has been sent which will contain a link to reset your\r\n\t\t\t\t\tpassword.{' '}\r\n\t\t\t\t</Text>\r\n\t\t\t</View>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={styles(colors).authenticationButton}\r\n\t\t\t\tonPress={() => resend()}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>\r\n\t\t\t\t\tResend Email\r\n\t\t\t\t</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<TouchableOpacity\r\n\t\t\t\tactiveOpacity={0.6}\r\n\t\t\t\tstyle={styles(colors).authenticationSpecialButton}\r\n\t\t\t\tonPress={() => props.navigation.push('LoginScreen')}\r\n\t\t\t>\r\n\t\t\t\t<Text style={styles(colors).authenticationButtonText}>\r\n\t\t\t\t\tBack to Login\r\n\t\t\t\t</Text>\r\n\t\t\t</TouchableOpacity>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default VerifyEmailPassword;\r\n"]},"metadata":{},"sourceType":"module"}
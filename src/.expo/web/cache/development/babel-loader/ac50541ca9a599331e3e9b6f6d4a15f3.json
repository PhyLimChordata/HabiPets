{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\katri\\\\OneDrive\\\\Documents\\\\GitHub\\\\HabiPets\\\\src\\\\frontend\\\\components\\\\Habits.js\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"../styling/Habits\";\nimport Ellipsis from \"./Ellipsis\";\nimport Counter from \"./Counter\";\nimport ScrollViewElement from \"./ScrollViewElement\";\nimport { AuthContext } from \"../Context\";\nimport { useTheme } from '@react-navigation/native';\n\nfunction Habits(props) {\n  var _useState = useState(props.streak),\n      _useState2 = _slicedToArray(_useState, 2),\n      streak = _useState2[0],\n      setStreak = _useState2[1];\n\n  var _useState3 = useState(props.frequency),\n      _useState4 = _slicedToArray(_useState3, 2),\n      frequency = _useState4[0],\n      setFrequency = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      completed = _useState6[0],\n      setCompleted = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      getToken = _useContext.getToken;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var completeHabit = function completeHabit() {\n    setFrequency(frequency - 1);\n    fetch('http://localhost:5000/api/v1.0.0/habit/mark_TODO/' + props.userHabitId + '/' + props.habitId, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'authentication-token': getToken\n      },\n      body: JSON.stringify({\n        expValue: 3\n      })\n    }).then(function (res) {\n      return res.json().then(function (data) {\n        if (frequency - 1 == 0) {\n          setCompleted(true);\n        }\n      });\n    }).catch();\n  };\n\n  var deleteHabit = function deleteHabit() {\n    fetch('http://localhost:5000/api/v1.0.0/habit/delete_habit/' + props.userHabitId + '/' + props.habitId, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'authentication-token': getToken\n      }\n    }).then(function (res) {\n      return res.json().then(function (data) {\n        changeRefreshing(true);\n        props.navigation.navigate(null);\n      });\n    }).catch();\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }\n  }, !completed ? React.createElement(ScrollViewElement, {\n    rightFunction: props.enableRight ? completeHabit : undefined,\n    leftFunction: props.enableLeft ? deleteHabit : undefined,\n    text: props.name,\n    content: React.createElement(View, {\n      style: styles(colors).horizontalContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles(colors).leftContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      style: styles(colors).textTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, Capitalize(props.name))), React.createElement(View, {\n      style: styles(colors).container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, React.createElement(Ellipsis, {\n      onPress: function onPress() {\n        return props.navigation.navigate('ModifyHabitScreen', {\n          habitId: props.habitId,\n          userHabitId: props.userHabitId\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles(colors).horizontalContainerBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, React.createElement(Counter, {\n      quantity: streak,\n      supplementalInfo: React.createElement(Image, {\n        source: require(\"../resources/images/Streak.png\"),\n        resizeMode: \"contain\",\n        style: {\n          height: 20,\n          width: 20,\n          tintColor: colors.Quaternary,\n          marginTop: 'auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 12\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }\n    }), React.createElement(Counter, {\n      quantity: frequency,\n      supplementalInfo: React.createElement(Text, {\n        style: styles(colors).expText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 12\n        }\n      }, \"x\"),\n      last: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }) : null);\n}\n\nfunction Capitalize(str) {\n  if (str != null) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return '';\n}\n\nexport default Habits;","map":{"version":3,"sources":["C:/Users/katri/OneDrive/Documents/GitHub/HabiPets/src/frontend/components/Habits.js"],"names":["React","useState","useContext","styles","Ellipsis","Counter","ScrollViewElement","AuthContext","useTheme","Habits","props","streak","setStreak","frequency","setFrequency","completed","setCompleted","getToken","colors","completeHabit","fetch","userHabitId","habitId","method","headers","body","JSON","stringify","expValue","then","res","json","data","catch","deleteHabit","changeRefreshing","navigation","navigate","enableRight","undefined","enableLeft","name","horizontalContainer","leftContainer","textTitle","Capitalize","container","horizontalContainerBottom","require","height","width","tintColor","Quaternary","marginTop","expText","str","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Image, Text } from 'react-native';\r\n\r\nimport styles from '../styling/Habits';\r\nimport Ellipsis from './Ellipsis';\r\nimport Counter from './Counter';\r\nimport ScrollViewElement from './ScrollViewElement';\r\n\r\nimport { AuthContext } from '../Context';\r\nimport { useTheme } from '@react-navigation/native';\r\n\r\nfunction Habits(props) {\r\n\tconst [streak, setStreak] = useState(props.streak);\r\n\tconst [frequency, setFrequency] = useState(props.frequency);\r\n\r\n\tconst [completed, setCompleted] = useState(false);\r\n\tconst { getToken } = useContext(AuthContext);\r\n\r\n\tconst { colors } = useTheme();\r\n\r\n\tconst completeHabit = () => {\r\n\t\tsetFrequency(frequency - 1);\r\n\r\n\t\tfetch(\r\n\t\t\t'http://localhost:5000/api/v1.0.0/habit/mark_TODO/' +\r\n\t\t\t\tprops.userHabitId +\r\n\t\t\t\t'/' +\r\n\t\t\t\tprops.habitId,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'authentication-token': getToken,\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\texpValue: 3,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t)\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\tif (frequency - 1 == 0) {\r\n\t\t\t\t\t\tsetCompleted(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t)\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\tconst deleteHabit = () => {\r\n\t\tfetch(\r\n\t\t\t'http://localhost:5000/api/v1.0.0/habit/delete_habit/' +\r\n\t\t\t\tprops.userHabitId +\r\n\t\t\t\t'/' +\r\n\t\t\t\tprops.habitId,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'authentication-token': getToken,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t)\r\n\t\t\t.then((res) =>\r\n\t\t\t\tres.json().then((data) => {\r\n\t\t\t\t\tchangeRefreshing(true);\r\n\t\t\t\t\tprops.navigation.navigate(null);\r\n\t\t\t\t\t//TODOs\r\n\t\t\t\t}),\r\n\t\t\t)\r\n\t\t\t.catch();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View>\r\n\t\t\t{!completed ? (\r\n\t\t\t\t<ScrollViewElement\r\n\t\t\t\t\trightFunction={props.enableRight ? completeHabit : undefined}\r\n\t\t\t\t\tleftFunction={props.enableLeft ? deleteHabit : undefined}\r\n\t\t\t\t\ttext={props.name}\r\n\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t<View style={styles(colors).horizontalContainer}>\r\n\t\t\t\t\t\t\t<View style={styles(colors).leftContainer}>\r\n\t\t\t\t\t\t\t\t<Text style={styles(colors).textTitle}>\r\n\t\t\t\t\t\t\t\t\t{Capitalize(props.name)}\r\n\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t<View style={styles(colors).container}>\r\n\t\t\t\t\t\t\t\t<Ellipsis\r\n\t\t\t\t\t\t\t\t\tonPress={() =>\r\n\t\t\t\t\t\t\t\t\t\tprops.navigation.navigate('ModifyHabitScreen', {\r\n\t\t\t\t\t\t\t\t\t\t\thabitId: props.habitId,\r\n\t\t\t\t\t\t\t\t\t\t\tuserHabitId: props.userHabitId,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<View style={styles(colors).horizontalContainerBottom}>\r\n\t\t\t\t\t\t\t\t\t<Counter\r\n\t\t\t\t\t\t\t\t\t\tquantity={streak}\r\n\t\t\t\t\t\t\t\t\t\tsupplementalInfo={\r\n\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\tsource={require('../resources/images/Streak.png')}\r\n\t\t\t\t\t\t\t\t\t\t\t\tresizeMode='contain'\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 20,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttintColor: colors.Quaternary,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: 'auto',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Counter\r\n\t\t\t\t\t\t\t\t\t\tquantity={frequency}\r\n\t\t\t\t\t\t\t\t\t\tsupplementalInfo={\r\n\t\t\t\t\t\t\t\t\t\t\t<Text style={styles(colors).expText}>x</Text>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlast={true}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nfunction Capitalize(str) {\r\n\tif (str != null) {\r\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\r\n\t}\r\n\treturn '';\r\n}\r\n\r\nexport default Habits;\r\n"]},"metadata":{},"sourceType":"module"}